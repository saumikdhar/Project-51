{"version":3,"sources":["Containers/Scoreboard/Scoreboard.module.css","Components/InputType/InputType.module.css","Containers/CreateProject/CreateProject.module.css","Components/UI/Input/Input.module.css","Components/Navigation/Toolbar/Toolbar.module.css","Containers/CreateProject/ProjectSubmission/ProjectSubmission.module.css","Containers/AssignUsers/AssignUsers.module.css","Components/UI/Button/Button.module.css","Components/UI/Spinner/Global/Global.module.css","Components/Navigation/NavItems/NavItem/NgnItem.module.css","Containers/Auth/Auth.module.css","Containers/Users/Users.module.css","hoc/Layout/Layout.module.css","Components/Logo/Logo.module.css","Components/Navigation/NavItems/NavItems.module.css","Components/UI/Button/Button.js","Components/UI/Input/Input.js","store/utility.js","store/actions/actionTypes.js","store/actions/auth.js","store/actions/users.js","Axios/axios.js","store/actions/assignUser.js","Components/UI/Spinner/Global/Global.js","Components/UI/Spinner/Spinner.js","Containers/Auth/Auth.js","Containers/Auth/Logout/Logout.js","Components/InputType/InputType.js","Containers/CreateProject/CreateProject.js","Containers/Users/Modals/AddUserModal.js","Containers/Users/Modals/EditUserModal.js","Containers/Users/Modals/DeleteUserModal.js","Containers/Users/Users.js","Containers/AssignUsers/AssignUsers.js","Containers/Projects/Projects.js","Containers/ProjectInfo/Modals/EditProjectModal.js","Containers/ProjectInfo/ProjectInfo.js","Containers/Scoreboard/Scoreboard.js","Containers/BusinessCase/BusinessCase.js","Containers/projectDash/project_dash.component.js","Containers/projectDash/project_dash_pending.component.js","Containers/projectDash/project_review.component.js","Assets/Hafod-logo.png","Components/Logo/Logo.js","Components/Navigation/NavItems/NavItem/NavItem.js","Components/Navigation/NavItems/NavItems.js","Components/Navigation/Toolbar/Toolbar.js","hoc/Layout/Layout.js","Containers/CreateProject/ProjectSubmission/ProjectSubmission.js","App.js","reportWebVitals.js","store/reducers/auth.js","store/reducers/users.js","store/reducers/assignUser.js","store/reducers/projects.js","index.js","Containers/Projects/Projects.module.css"],"names":["module","exports","Button","props","disabled","className","classes","btnType","join","onClick","clicked","children","Input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","push","Invalid","elementType","elementConfig","value","onChange","changed","Label","label","updateObject","oldObject","updatedProperties","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","GET_USER_START","GET_USER_SUCCESS","GET_USER_FAIL","GET_USERS_START","GET_USERS_SUCCESS","GET_USERS_FAIL","ADD_USER_START","ADD_USER_SUCCESS","ADD_USER_FAIL","EDIT_USER_START","EDIT_USER_SUCCESS","EDIT_USER_FAIL","DELETE_USER_START","DELETE_USER_SUCCESS","DELETE_USER_FAIL","GET_PROJECT_USER_START","GET_PROJECT_USER_SUCCESS","GET_PROJECT_USER_FAIL","ADD_PROJECT_USER_START","ADD_PROJECT_USER_SUCCESS","ADD_PROJECT_USER_FAIL","REMOVE_PROJECT_USER_START","REMOVE_PROJECT_USER_SUCCESS","REMOVE_PROJECT_USER_FAIL","EDIT_PROJECT_START","EDIT_PROJECT_SUCCESS","EDIT_PROJECT_FAIL","SET_PROJECT_USER","authSuccess","token","userId","role","type","actionTypes","authFail","error","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","auth","email","password","url","fetch","method","headers","body","JSON","stringify","then","res","status","Error","json","resData","setItem","remainingMilliseconds","expiryDate","Date","getTime","toISOString","catch","getUsers","getItem","Authorization","users","getUsersFail","addUser","values","addUserFail","editUser","editUserFail","deleteUser","deleteUserFail","axios","create","baseURL","getProjectUserSuccess","removeUserFromProject","projectId","a","header","response","ok","message","Global","Svg","version","xmlns","width","height","viewBox","preserveAspectRatio","fill","transform","Path","stroke","strokeWidth","d","Spinner","connect","state","loading","isAuthenticated","authRedirectPath","onAuth","actions","onSetAuthRedirectPath","path","useState","placeholder","valid","authForm","setAuthForm","checkValidity","rules","isValid","required","trim","minLength","length","maxLength","formElementsArray","key","id","config","form","map","formElement","style","display","event","controlName","updatedControls","target","validation","inputChangedHandler","errorMessage","authRedirect","to","Auth","onSubmit","preventDefault","Logout","this","onLogout","Component","OptionType","Option","Select","optionType","date","dateFormat","inputType","InputType","answerOption","maxHeight","resize","rows","cols","defaultValue","moment","format","disabledDate","current","max","min","formatter","replace","parser","CreateProject","questionnaireForm","setQuestionnaireForm","setError","inputChangeHandler","questionId","updatedQuestionnaireForm","questions","answer","showOrHideQuestionOne","showOrHideQuestions","question","filter","oldQuestion","isShown","question1","useEffect","data","questionnaire","options","option","console","log","onSubmitHandler","validateAnswers","answers","projectTitle","getQuestionAnswer","projectType","newProject","name","Math","round","random","projectSize","history","currentAnswer","find","currentError","optionTypeHandler","Group","index","dateString","datePickerHandler","minWidth","Classes","border","background","color","Box","borderColor","window","scrollTo","top","behavior","FormItem","Form","Item","AddUserModal","hideModal","visible","title","onCancel","destroyOnClose","footer","htmlType","layout","onFinish","whitespace","pattern","prefix","MailOutlined","LockOutlined","extra","showSearch","optionFilterProp","filterOption","input","toLowerCase","indexOf","switchItems","React","EditUserModal","record","initialValue","firstName","surname","textAlign","danger","roles","transformationTeam","manager","employee","Users","refreshUsers","addUserModalVisible","editUserModalVisible","deleteUserModalVisible","userToEdit","showAddUserModal","setState","hideAddUserModal","showEditUserModal","user","hideEditUserModal","showDeleteUserModal","hideDeleteUserModal","submitUser","onSwitchChange","columns","render","text","EditOutlined","DeleteOutlined","displayUsers","noProjects","Object","entries","project","keys","marginBottom","icon","UserAddOutlined","bordered","dataSource","scroll","x","DeleteUserModal","assignUserError","assignUser","addUserToProject","listOfUserId","getProjectUsers","setProjectUsers","listOfUsers","loadingButton","setLoadingButton","loadingTable","setLoadingTable","selectedRowKeys","setSelectedRowKeys","tableFiltered","setTableFiltered","setDataSource","filterTable","setFilterTable","Search","location","pathname","split","pop","fetchTableData","rowSelection","getCheckboxProps","oldUserId","includes","hasSelected","AssignProjects","onClose","splice","flat","closable","User","onSearch","filteredData","o","some","k","String","enterButton","allowClear","marginRight","shape","oldUsers","updatedUsers","assignUsersHandler","marginLeft","rowClassName","dataIndex","pagination","position","pageSizeOptions","projects","setProjects","flatMap","Projects","Table","managerName","projectStatus","quickWin","placement","marginTop","antBtn","createdAt","setId","setProject","isLoaded","setIsLoaded","projectName","setProjectName","setManagerName","setProjectStatus","setProjectSize","setQuickWin","setProjectType","infoId","match","params","deleteProject","routeType","reload","isModalVisible","setIsModalVisible","isModalVisible2","setIsModalVisible2","isModalVisible3","setIsModalVisible3","colSpan","ProjectInfo","float","onOk","editProject","e","ScoreBoard","scoreboards","setScoreBoards","tasks","Critical","CriticalColor","getScoreboardData","Scoreboard","Helmet","goBack","RagCharts","RagChart","indexBy","margin","right","bottom","left","valueScale","indexScale","colors","scheme","defs","size","padding","stagger","rotation","lineWidth","spacing","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","labelTextColor","legends","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","animate","motionStiffness","motionDamping","scoreboard","actionNarrative","objectiveNarrative","riskNarrative","BusinessCase","businessCases","setBusinessCase","businessCase","benefit","benefitTimescale","businessOption","customerImpactAndEngagement","diversityAndInclusionConsiderations","duration","estimatedCost","executiveSummary","investmentAppraisal","majorRisks","negativeImpact","reason","sponsor","ProjectCard","projectScore","transformationLead","project_dash_active_Component","activeProjects","pendingProjects","get","sort","b","priorityScore","currentproject","action","projectList","ProjectCardPending","project_dash_pending_Component","project_review_Component","onChangeManager","bind","onChangeTransformationLead","onChangeQuestions","onSubmitAccept","onSubmitReject","Projectinfo","BusinessInfo","projectUpdate","post","Logo","src","messageLogo","alt","NavItem","NavigationItem","link","exact","activeClassName","active","isAuthorise","NavigationItems","Toolbar","AppTitle","DesktopOnly","Layout","Content","ProjectSubmission","box","image","contentWrapper","hafodLogo","withRouter","onTryAutoSignUp","expirationDate","routes","component","AdminPendingDash","AdminActiveDash","AdminPendingReview","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","authStart","authLogout","setAuthRedirectPath","reducer","getUserStart","getUserSuccess","getUserFail","getUsersStart","getUsersSuccess","addUserStart","addUserSuccess","editUserStart","editUserSuccess","deleteUserStart","deleteUserSuccess","projectUsersStart","projectUsersSuccess","setProjectUsersSuccess","projectUsersFail","projectsReducerDefaultState","editProjectStart","editProjectSuccess","editProjectFail","composeEnhancers","compose","rootReducer","combineReducers","authReducer","usersReducer","assignUserReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.24b92286.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Scoreboard\":\"Scoreboard_Scoreboard__1eL-T\",\"RagCharts\":\"Scoreboard_RagCharts__1MATN\",\"RagChart\":\"Scoreboard_RagChart__1DODG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputType\":\"InputType_InputType__HV1K5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateProject\":\"CreateProject_CreateProject__3JeeI\",\"Box\":\"CreateProject_Box__1UHsw\",\"Button\":\"CreateProject_Button__5a_f-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2Tr5k\",\"Label\":\"Input_Label__2rMhM\",\"InputElement\":\"Input_InputElement__Hvu41\",\"Invalid\":\"Input_Invalid__11oF1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2ddc9\",\"Logo\":\"Toolbar_Logo__3hRcV\",\"AppTitle\":\"Toolbar_AppTitle__1Xls9\",\"DesktopOnly\":\"Toolbar_DesktopOnly__sICxZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProjectSubmission\":\"ProjectSubmission_ProjectSubmission__zW7bI\",\"box\":\"ProjectSubmission_box__SRrNt\",\"image\":\"ProjectSubmission_image__1DtzI\",\"contentWrapper\":\"ProjectSubmission_contentWrapper__1Yabm\",\"homeButton\":\"ProjectSubmission_homeButton__Gy6Gp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AssignProjects\":\"AssignUsers_AssignProjects__2zg_D\",\"User\":\"AssignUsers_User__1CdXD\",\"Button\":\"AssignUsers_Button__65MQ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1MTXA\",\"Submit\":\"Button_Submit__2HRux\",\"Create\":\"Button_Create__1Atpf\",\"Back\":\"Button_Back__umykc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Path\":\"Global_Path__3UIIt\",\"dash\":\"Global_dash__3NCMn\",\"Svg\":\"Global_Svg__3DKA-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NgnItem_NavigationItem__1Wwpf\",\"active\":\"NgnItem_active__1ITZg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__pzKcc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Users\":\"Users_Users__1w3Lm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3ji9x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1ypDB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavItems_NavigationItems__1vIJT\"};","import React from 'react';\r\nimport classes from './Button.module.css'\r\n\r\nconst Button = props => {\r\n    return (\r\n        <button\r\n            disabled={props.disabled}\r\n            className={[classes.Button, classes[props.btnType]].join(' ')}\r\n            onClick={props.clicked}>\r\n            {props.children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport classes from './Input.module.css'\r\n\r\nconst Input = props => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = (\r\n                <input\r\n                    className={inputClasses.join(' ')}\r\n                    {...props.elementConfig}\r\n                    value={props.value}\r\n                    onChange={props.changed}/>\r\n            )\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed}/>\r\n            break;\r\n        default:\r\n            inputElement = (\r\n                <input\r\n                    className={inputClasses.join(\" \")}\r\n                    {...props.elementConfig}\r\n                    value={props.value}\r\n                    onChange={props.changed}\r\n                />\r\n            );\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Input;","export const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties\r\n  };\r\n};\r\n\r\nexport const backendUrl = () => {\r\n  return process.env.NODE_ENV === 'development'\r\n    ? 'http://localhost:8080'\r\n    : 'https://project-management-001-api.herokuapp.com';\r\n};\r\n","//for authentication\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\r\n\r\n//for users\r\nexport const GET_USER_START = 'GET_USER_START';\r\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS';\r\nexport const GET_USER_FAIL = 'GET_USER_FAIL';\r\n\r\nexport const GET_USERS_START = 'GET_USERS_START';\r\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS';\r\nexport const GET_USERS_FAIL = 'GET_USERS_FAIL';\r\n\r\nexport const ADD_USER_START = 'ADD_USER_START';\r\nexport const ADD_USER_SUCCESS = 'ADD_USER_SUCCESS';\r\nexport const ADD_USER_FAIL = 'ADD_USER_FAIL';\r\n\r\nexport const EDIT_USER_START = 'EDIT_USER_START';\r\nexport const EDIT_USER_SUCCESS = 'EDIT_USER_SUCCESS';\r\nexport const EDIT_USER_FAIL = 'EDIT_USER_FAIL';\r\n\r\nexport const DELETE_USER_START = 'DELETE_USER_START';\r\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS';\r\nexport const DELETE_USER_FAIL = 'DELETE_USER_FAIL';\r\n\r\n// for assign users\r\nexport const GET_PROJECT_USER_START = 'GET_PROJECT_USERS_START';\r\nexport const GET_PROJECT_USER_SUCCESS = 'GET_PROJECT_USER_SUCCESS';\r\nexport const GET_PROJECT_USER_FAIL = 'GET_PROJECT_USER_FAIL';\r\n\r\nexport const ADD_PROJECT_USER_START = 'ADD_PROJECT_USER_START';\r\nexport const ADD_PROJECT_USER_SUCCESS = 'ADD_PROJECT_USER_SUCCESS';\r\nexport const ADD_PROJECT_USER_FAIL = 'ADD_PROJECT_USER_FAIL';\r\n\r\nexport const REMOVE_PROJECT_USER_START = 'REMOVE_PROJECT_USER_START';\r\nexport const REMOVE_PROJECT_USER_SUCCESS = 'REMOVE_PROJECT_USER_SUCCESS';\r\nexport const REMOVE_PROJECT_USER_FAIL = 'REMOVE_PROJECT_USER_FAIL';\r\n\r\nexport const EDIT_PROJECT_START = 'EDIT_PROJECT_START';\r\nexport const EDIT_PROJECT_SUCCESS = 'EDIT_PROJECT_SUCCESS';\r\nexport const EDIT_PROJECT_FAIL = 'EDIT_PROJECT_FAIL';\r\n\r\nexport const SET_PROJECT_USER = 'SET_PROJECT_USER';\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { backendUrl } from '../utility';\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START\r\n  };\r\n};\r\n\r\nexport const authSuccess = (token, userId, role) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    token: token,\r\n    userId: userId,\r\n    role: role\r\n  };\r\n};\r\n\r\nexport const authFail = error => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error\r\n  };\r\n};\r\nexport const logout = () => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('expirationDate');\r\n  localStorage.removeItem('userId');\r\n  localStorage.removeItem('role');\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT\r\n  };\r\n};\r\n\r\nexport const checkAuthTimeout = expirationTime => {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(logout());\r\n    }, expirationTime);\r\n  };\r\n};\r\n\r\nexport const auth = (email, password) => {\r\n  return dispatch => {\r\n    dispatch(authStart());\r\n\r\n    const url = `${backendUrl()}/auth/login`;\r\n    const method = 'POST';\r\n    const header = { 'Content-Type': 'application/json' };\r\n\r\n    fetch(url, {\r\n      method: method,\r\n      headers: header,\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password\r\n      })\r\n    })\r\n      .then(res => {\r\n        if (res.status === 422) {\r\n          throw new Error('Validation failed.');\r\n        } else if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Email or password was incorrect!');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        dispatch(authSuccess(resData.token, resData.userId, resData.role));\r\n        localStorage.setItem('token', resData.token);\r\n        const remainingMilliseconds = 60 * 60 * 1000;\r\n        const expiryDate = new Date(new Date().getTime() + remainingMilliseconds);\r\n        localStorage.setItem('expiryDate', expiryDate.toISOString());\r\n        dispatch(checkAuthTimeout(remainingMilliseconds));\r\n      })\r\n      .catch(error => {\r\n        dispatch(authFail(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const setAuthRedirectPath = path => {\r\n  return {\r\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n    path: path\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return dispatch => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (!token) {\r\n      dispatch(logout());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem('expiryDate'));\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(logout());\r\n      } else {\r\n        const url = `${backendUrl()}/auth/userDetails`;\r\n        const method = 'GET';\r\n        const header = {\r\n          Authorization: 'Bearer ' + token,\r\n          'Content-Type': 'application/json'\r\n        };\r\n\r\n        fetch(url, {\r\n          method: method,\r\n          headers: header\r\n        })\r\n          .then(res => {\r\n            if (res.status !== 200 && res.status !== 201) {\r\n              throw new Error('User not found');\r\n            }\r\n            return res.json();\r\n          })\r\n          .then(resData => {\r\n            dispatch(authSuccess(token, resData.userId, resData.role));\r\n          })\r\n          .catch(error => {\r\n            dispatch(authFail(error));\r\n          });\r\n        dispatch(checkAuthTimeout(expirationDate.getTime() - new Date().getTime()));\r\n      }\r\n    }\r\n  };\r\n};\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { backendUrl } from '../utility';\r\n\r\nexport const getUserStart = () => {\r\n  return {\r\n    type: actionTypes.GET_USER_START\r\n  };\r\n};\r\n\r\nexport const getUserSuccess = users => {\r\n  return {\r\n    type: actionTypes.GET_USER_SUCCESS,\r\n    users: users\r\n  };\r\n};\r\n\r\nexport const getUserFail = error => {\r\n  return {\r\n    type: actionTypes.GET_USER_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const getUsersStart = () => {\r\n  return {\r\n    type: actionTypes.GET_USERS_START\r\n  };\r\n};\r\n\r\nexport const getUsersSuccess = users => {\r\n  return {\r\n    type: actionTypes.GET_USERS_SUCCESS,\r\n    users: users\r\n  };\r\n};\r\n\r\nexport const getUsersFail = error => {\r\n  return {\r\n    type: actionTypes.GET_USERS_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const addUserStart = () => {\r\n  return {\r\n    type: actionTypes.ADD_USER_START\r\n  };\r\n};\r\n\r\nexport const addUserSuccess = users => {\r\n  return {\r\n    type: actionTypes.ADD_USER_SUCCESS\r\n  };\r\n};\r\n\r\nexport const addUserFail = error => {\r\n  return {\r\n    type: actionTypes.ADD_USER_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const editUserStart = () => {\r\n  return {\r\n    type: actionTypes.EDIT_USER_START\r\n  };\r\n};\r\n\r\nexport const editUserSuccess = (users) => {\r\n  return {\r\n    type: actionTypes.EDIT_USER_SUCCESS\r\n  };\r\n};\r\n\r\nexport const editUserFail = error => {\r\n  return {\r\n    type: actionTypes.EDIT_USER_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const deleteUserStart = () => {\r\n  return {\r\n    type: actionTypes.DELETE_USER_START\r\n  };\r\n};\r\n\r\nexport const deleteUserSuccess = (users) => {\r\n  return {\r\n    type: actionTypes.DELETE_USER_SUCCESS\r\n  };\r\n};\r\n\r\nexport const deleteUserFail = error => {\r\n  return {\r\n    type: actionTypes.DELETE_USER_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const getUser = () => {\r\n  return dispatch => {\r\n    dispatch(getUserStart());\r\n\r\n    const url = `${backendUrl()}/users/get`;\r\n    const token = localStorage.getItem('token');\r\n    const method = 'POST';\r\n    const header = { Authorization: 'Bearer ' + token, 'Content-Type': 'application/json' };\r\n\r\n    fetch(url, {\r\n      method: method,\r\n      headers: header,\r\n      body: JSON.stringify({\r\n        userId: localStorage.getItem('userId')\r\n      })\r\n    })\r\n      .then(res => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Could not retrieve user!');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        dispatch(getUserSuccess(resData.user));\r\n      })\r\n      .catch(error => {\r\n        dispatch(getUserFail(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const getUsers = () => {\r\n  return dispatch => {\r\n    dispatch(getUsersStart());\r\n\r\n    const url = `${backendUrl()}/users/getAll`;\r\n    const method = 'POST';\r\n    const token = localStorage.getItem('token');\r\n    const header = { Authorization: 'Bearer ' + token};\r\n\r\n    fetch(url, {\r\n      method: method,\r\n      headers: header\r\n    })\r\n      .then(res => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Could not retrieve users!');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        dispatch(getUsersSuccess(resData));\r\n      })\r\n      .catch(error => {\r\n        dispatch(getUsersFail(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const addUser = values => {\r\n  return dispatch => {\r\n    dispatch(addUserStart());\r\n\r\n    const url = `${backendUrl()}/users/add`;\r\n    const method = 'POST';\r\n    const token = localStorage.getItem('token');\r\n    const header = { Authorization: 'Bearer ' + token, 'Content-Type': 'application/json' };\r\n\r\n    fetch(url, {\r\n      method: method,\r\n      headers: header,\r\n      body: JSON.stringify(values)\r\n    })\r\n      .then(res => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Could not add user!');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        dispatch(getUsers());\r\n        dispatch(addUserSuccess());\r\n      })\r\n      .catch(error => {\r\n        dispatch(addUserFail(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const editUser = (values) => {\r\n  return dispatch => {\r\n    dispatch(editUserStart());\r\n\r\n    const url = \"http://localhost:8080/users/edit\";\r\n    const method = \"POST\";\r\n    const token = localStorage.getItem('token');\r\n    const header = { Authorization: 'Bearer ' + token, 'Content-Type': 'application/json' };\r\n\r\n    fetch(url, {\r\n      method: method,\r\n      headers: header,\r\n      body: JSON.stringify(values)\r\n    })\r\n      .then(res => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Could not edit user!\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        dispatch(getUsers());\r\n        dispatch(editUserSuccess());\r\n      })\r\n      .catch(error => {\r\n        dispatch(editUserFail(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteUser = (values) => {\r\n  return dispatch => {\r\n    dispatch(deleteUserStart());\r\n\r\n    const url = \"http://localhost:8080/users/delete\";\r\n    const method = \"POST\";\r\n    const token = localStorage.getItem('token');\r\n    const header = { Authorization: 'Bearer ' + token, 'Content-Type': 'application/json' };\r\n    fetch(url, {\r\n      method: method,\r\n      headers: header,\r\n      body: JSON.stringify(values)\r\n    })\r\n      .then(res => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Could not edit user!\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        dispatch(getUsers());\r\n        dispatch(deleteUserSuccess());\r\n      })\r\n      .catch(error => {\r\n        dispatch(deleteUserFail(error));\r\n      });\r\n  };\r\n};\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'http://localhost:8080/api'\r\n});","import * as actionTypes from '../actions/actionTypes';\r\n\r\nexport const addProjectUserStart = () => {\r\n  return {\r\n    type: actionTypes.ADD_PROJECT_USER_START\r\n  };\r\n};\r\n\r\nexport const getProjectUserStart = () => {\r\n  return {\r\n    type: actionTypes.GET_PROJECT_USER_START\r\n  };\r\n};\r\n\r\nexport const removeProjectUserStart = () => {\r\n  return {\r\n    type: actionTypes.REMOVE_PROJECT_USER_START\r\n  };\r\n};\r\n\r\nexport const addProjectUserSuccess = users => {\r\n  return {\r\n    type: actionTypes.ADD_PROJECT_USER_SUCCESS,\r\n    users: users\r\n  };\r\n};\r\n\r\nexport const getProjectUserSuccess = users => {\r\n  return {\r\n    type: actionTypes.GET_PROJECT_USER_SUCCESS,\r\n    users: users\r\n  };\r\n};\r\n\r\nexport const setProjectUsers = users => {\r\n  return {\r\n    type: actionTypes.SET_PROJECT_USER,\r\n    users: users\r\n  };\r\n};\r\n\r\nexport const removeProjectUserSuccess = users => {\r\n  return {\r\n    type: actionTypes.REMOVE_PROJECT_USER_SUCCESS,\r\n    users: users\r\n  };\r\n};\r\n\r\nexport const addProjectUserFail = error => {\r\n  return {\r\n    type: actionTypes.ADD_PROJECT_USER_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const getProjectUserFail = error => {\r\n  return {\r\n    type: actionTypes.GET_PROJECT_USER_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const removeProjectUserFail = error => {\r\n  return {\r\n    type: actionTypes.REMOVE_PROJECT_USER_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const removeUserFromProject = (userId, projectId) => {\r\n  return async dispatch => {\r\n    dispatch(removeProjectUserStart());\r\n    const url = 'http://localhost:8080/users/removeUserFromProject';\r\n    const method = 'PATCH';\r\n    const token = localStorage.getItem('token');\r\n    const header = { Authorization: 'Bearer ' + token, 'Content-Type': 'application/json' };\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: method,\r\n        headers: header,\r\n        body: JSON.stringify({\r\n          projectId: projectId,\r\n          userId: userId\r\n        })\r\n      });\r\n\r\n      const resData = await response.json();\r\n      if (!response.ok) {\r\n        throw new Error(resData.message || 'unable to remove user');\r\n      } else {\r\n        // dispatch(getProjectUserSuccess(resData.users));\r\n      }\r\n    } catch (error) {\r\n      dispatch(removeProjectUserFail(error));\r\n    }\r\n  };\r\n};\r\n\r\nexport const getProjectUsers = projectId => {\r\n  return async dispatch => {\r\n    dispatch(getProjectUserStart());\r\n    const url = 'http://localhost:8080/users/projectUsers';\r\n    const method = 'POST';\r\n    const token = localStorage.getItem('token');\r\n    const header = { Authorization: 'Bearer ' + token, 'Content-Type': 'application/json' };\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: method,\r\n        headers: header,\r\n        body: JSON.stringify({\r\n          projectId: projectId\r\n        })\r\n      });\r\n\r\n      const resData = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(resData.message || 'unable to fetch');\r\n      } else {\r\n        dispatch(getProjectUserSuccess(resData.users));\r\n      }\r\n    } catch (error) {\r\n      dispatch(getProjectUserFail(error.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const addUserToProject = (listOfUserId, projectId) => {\r\n  return async dispatch => {\r\n    dispatch(addProjectUserStart());\r\n    const url = 'http://localhost:8080/users/addUserToProject';\r\n    const method = 'POST';\r\n    const token = localStorage.getItem('token');\r\n    const header = { Authorization: 'Bearer ' + token, 'Content-Type': 'application/json' };\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: method,\r\n        headers: header,\r\n        body: JSON.stringify({\r\n          projectId: projectId,\r\n          userId: listOfUserId\r\n        })\r\n      });\r\n\r\n      const resData = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(resData.message || 'Failed to add users to project');\r\n      } else {\r\n        // dispatch(addProjectUserSuccess(resData.users));\r\n      }\r\n    } catch (error) {\r\n      dispatch(addProjectUserFail(error));\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport classes from \"./Global.module.css\";\r\nconst Global = () => {\r\n  return (\r\n    <div className={classes.Svg}>\r\n    <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\"\r\n         width=\"300.000000pt\" height=\"300.000000pt\" viewBox=\"0 0 300.000000 300.000000\"\r\n         preserveAspectRatio=\"xMidYMid meet\">\r\n      <g fill=\"green\" transform=\"translate(0.000000,300.000000) scale(0.100000,-0.100000)\">\r\n\r\n        <path className={classes.Path} fill=\"#FFFFFF\" stroke=\"#f4cd4e\" strokeWidth=\"24\" d=\"M1429 2750 c-23 -7 -196 -111 -514 -310 -55 -34 -206 -128 -335 -208\r\n-434 -267 -491 -304 -507 -329 -16 -23 -15 -28 8 -70 13 -25 34 -56 47 -70 28\r\n-30 42 -29 162 16 203 76 449 135 745 178 172 25 726 25 900 0 281 -41 488\r\n-91 738 -177 64 -22 123 -40 130 -40 29 0 97 101 97 144 0 27 -12 38 -105 95\r\n-38 24 -329 204 -645 399 -316 196 -591 362 -610 369 -40 14 -73 15 -111 3z\r\nm156 -51\r\n\"/>\r\n\r\n        <path d=\"M1554 1601 c-59 -27 -86 -76 -92 -168 l-5 -74 -36 3 c-36 3 -36 3\r\n-39 -39 l-3 -43 40 0 41 0 0 -210 0 -210 60 0 60 0 0 210 0 210 71 0 70 0 -3\r\n43 -3 42 -67 -3 -68 -4 0 34 c0 99 36 136 117 118 25 -6 50 -7 54 -3 4 4 9 26\r\n11 48 3 38 2 39 -37 51 -59 18 -124 16 -171 -5z m178 -29 c22 -22 -8 -39 -54\r\n-33 -46 7 -88 -6 -88 -26 0 -7 -7 -13 -15 -13 -11 0 -15 -11 -16 -37 0 -21 -2\r\n-51 -3 -66 -2 -38 35 -65 89 -63 29 1 41 -3 43 -15 2 -14 -7 -16 -57 -15 -33\r\n0 -58 -1 -55 -3 2 -2 -1 -10 -7 -17 -7 -9 -11 -79 -11 -198 1 -208 2 -206 -65\r\n-198 -9 2 -12 50 -10 196 l2 195 -27 16 c-15 9 -31 15 -35 15 -4 -1 -9 3 -11\r\n9 -2 6 3 11 11 11 34 0 56 34 62 92 7 83 23 115 75 152 20 14 39 17 93 13 38\r\n-2 73 -9 79 -15z\"/>\r\n        <path d=\"M2701 1599 c-24 -5 -46 -11 -48 -13 -3 -3 -5 -61 -4 -130 1 -83 -2\r\n-126 -8 -126 -6 0 -11 4 -11 9 0 14 -77 41 -118 41 -59 0 -136 -44 -171 -97\r\n-79 -119 -61 -312 37 -393 71 -58 195 -58 258 1 l24 22 0 -26 c0 -26 2 -27 55\r\n-27 l55 0 0 375 c0 294 -3 375 -12 374 -7 -1 -33 -5 -57 -10z m48 -351 c1\r\n-248 -2 -324 -12 -330 -9 -6 -9 -8 1 -8 23 0 12 -18 -15 -23 -20 -4 -35 1 -50\r\n15 -20 19 -23 19 -60 3 -21 -9 -46 -21 -55 -26 -64 -34 -197 28 -214 99 -4 15\r\n-11 33 -17 40 -22 28 9 242 35 242 4 0 8 5 8 10 0 15 30 43 64 60 41 21 144\r\n19 178 -4 26 -17 27 -17 45 3 15 18 18 40 18 128 0 106 0 107 25 113 14 4 30\r\n5 36 3 8 -3 12 -100 13 -325z\"/>\r\n        <path d=\"M2491 1295 c-43 -34 -72 -72 -81 -105 -12 -45 -19 -161 -9 -154 4 2\r\n13 -12 19 -31 23 -70 98 -100 175 -70 25 9 45 21 45 26 0 6 4 8 9 5 16 -10 23\r\n46 22 163 -1 108 -3 114 -26 133 -14 11 -32 26 -39 34 -17 16 -95 15 -115 -1z\r\nm129 -43 c24 -19 25 -23 25 -138 l0 -118 -34 -23 c-49 -33 -105 -31 -141 5\r\n-78 79 -57 253 35 293 28 12 85 3 115 -19z\"/>\r\n        <path d=\"M195 1568 c-3 -7 -4 -168 -3 -358 l3 -345 68 -3 67 -3 0 160 0 160\r\n150 0 150 1 0 -160 0 -160 65 0 65 0 0 360 0 360 -65 0 -65 0 0 -150 0 -150\r\n-150 0 -149 0 -3 148 -3 147 -63 3 c-44 2 -64 -1 -67 -10z m97 -13 c10 -4 13\r\n-35 11 -135 -1 -104 2 -133 13 -145 9 -8 21 -15 27 -16 18 -1 281 2 293 3 13\r\n2 14 6 14 146 0 63 5 122 10 133 14 25 69 27 72 2 0 -10 2 -161 2 -335 l1\r\n-316 -30 -5 c-51 -8 -54 2 -53 151 0 120 -2 137 -18 149 -21 16 -290 18 -314\r\n3 -12 -7 -16 -39 -20 -145 -3 -85 -1 -137 5 -139 19 -8 -20 -26 -50 -24 l-30\r\n3 -2 329 c-1 181 0 333 3 338 6 9 45 11 66 3z\"/>\r\n        <path d=\"M979 1366 c-73 -26 -120 -78 -144 -160 -40 -135 8 -291 105 -341 65\r\n-33 169 -19 220 30 l27 25 11 -24 c13 -29 41 -39 102 -34 43 3 44 4 46 40 1\r\n30 -3 38 -20 40 -20 3 -21 9 -24 208 -1 114 -7 207 -12 210 -5 3 -31 6 -57 5\r\n-41 0 -48 -3 -53 -23 l-5 -24 -19 21 c-35 38 -113 50 -177 27z m155 -44 c29\r\n-16 44 -19 58 -11 10 5 18 14 18 19 0 7 22 8 62 1 4 0 7 -87 7 -193 0 -174 2\r\n-193 19 -212 11 -12 18 -26 15 -33 -6 -17 -72 -4 -95 19 -25 25 -45 23 -91 -9\r\n-31 -22 -50 -27 -91 -26 -28 1 -59 3 -69 5 -25 6 -77 56 -77 74 0 9 -5 12 -12\r\n8 -6 -4 -8 -3 -5 3 3 5 -1 23 -10 39 -22 43 -13 185 16 240 12 23 30 49 39 57\r\n53 48 147 56 216 19z\"/>\r\n        <path d=\"M1013 1286 c-55 -31 -85 -91 -86 -174 -2 -108 51 -186 125 -185 62 1\r\n80 8 115 43 l36 36 -2 108 c-2 117 -8 134 -55 162 -50 31 -90 34 -133 10z\r\nm131 -37 c25 -20 26 -24 26 -128 0 -71 -4 -112 -12 -123 -43 -52 -118 -64\r\n-161 -24 -62 58 -62 203 0 268 34 36 106 40 147 7z\"/>\r\n        <path d=\"M1902 1365 c-130 -40 -199 -191 -157 -342 33 -117 113 -177 239 -177\r\n105 1 188 53 229 143 30 65 29 188 0 254 -51 112 -180 163 -311 122z m204 -39\r\nc70 -36 99 -101 98 -217 -1 -71 -6 -95 -25 -128 -26 -46 -90 -94 -130 -95 -15\r\n-1 -25 -5 -22 -10 12 -19 -131 4 -173 29 -76 44 -110 156 -84 278 9 45 21 67\r\n54 101 23 25 56 48 72 51 16 4 34 8 39 10 23 9 142 -4 171 -19z\"/>\r\n        <path d=\"M1920 1287 c-13 -7 -34 -27 -46 -44 -12 -18 -24 -30 -27 -27 -3 3 -3\r\n-3 0 -15 3 -12 1 -21 -3 -21 -5 0 -7 -35 -4 -77 6 -93 28 -136 85 -167 33 -19\r\n47 -21 85 -14 29 5 53 17 68 33 12 15 22 22 22 18 1 -4 8 10 16 32 18 48 19\r\n150 3 205 -22 74 -125 114 -199 77z m120 -22 c45 -23 64 -69 64 -150 0 -110\r\n-44 -170 -125 -170 -69 0 -112 63 -113 165 -1 134 79 204 174 155z\"/>\r\n      </g>\r\n    </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Global;","import React from \"react\";\r\nimport classes from \"./Spinner.module.css\";\r\nimport Global from \"./Global/Global\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <>\r\n      <Global/>\r\n      <p/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Spinner;","import React, { useState } from 'react';\r\nimport classes from './Auth.module.css';\r\nimport Button from '../../Components/UI/Button/Button';\r\nimport Input from '../../Components/UI/Input/Input';\r\nimport { updateObject } from '../../store/utility';\r\nimport * as actions from '../../store/actions/index';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../../Components/UI/Spinner/Spinner';\r\n\r\nconst Auth = props => {\r\n  const [authForm, setAuthForm] = useState({\r\n    email: {\r\n      elementType: 'input',\r\n      elementConfig: {\r\n        type: 'email',\r\n        placeholder: 'name@Hafod.com'\r\n      },\r\n      label: 'Email Address',\r\n      valid: false,\r\n      value: ''\r\n    },\r\n    password: {\r\n      elementType: 'input',\r\n      elementConfig: {\r\n        type: 'password',\r\n        placeholder: 'password'\r\n      },\r\n      label: 'Password',\r\n      valid: false,\r\n      value: ''\r\n    }\r\n  });\r\n\r\n  const inputChangedHandler = (event, controlName) => {\r\n    const updatedControls = updateObject(authForm, {\r\n      [controlName]: updateObject(authForm[controlName], {\r\n        value: event.target.value,\r\n        valid: checkValidity(event.target.value.trim(), authForm[controlName].validation)\r\n      })\r\n    });\r\n    setAuthForm(updatedControls);\r\n  };\r\n\r\n  const checkValidity = (value, rules) => {\r\n    let isValid = true;\r\n    if (!rules) {\r\n      return true;\r\n    }\r\n    if (rules.required) {\r\n      isValid = value.trim() !== '' && isValid;\r\n    }\r\n    if (rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n    if (rules.maxLength) {\r\n      isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  const formElementsArray = [];\r\n  for (let key in authForm) {\r\n    formElementsArray.push({\r\n      id: key,\r\n      config: authForm[key]\r\n    });\r\n  }\r\n\r\n  let form = formElementsArray.map(formElement => {\r\n    return (\r\n      <Input\r\n        style={{ display: 'none' }}\r\n        key={formElement.id}\r\n        elementType={formElement.config.elementType}\r\n        elementConfig={formElement.config.elementConfig}\r\n        value={formElement.config.value}\r\n        label={formElement.config.label}\r\n        changed={event => inputChangedHandler(event, formElement.id)}\r\n        shouldValidate={formElement.config.validation}\r\n      />\r\n    );\r\n  });\r\n\r\n  if (props.loading) {\r\n    form = <Spinner />;\r\n  }\r\n\r\n  let errorMessage = null;\r\n  if (props.error) {\r\n    errorMessage = <p>{props.error}</p>;\r\n  }\r\n\r\n  let authRedirect = null;\r\n\r\n  if (props.isAuthenticated) {\r\n    authRedirect = <Redirect to={props.authRedirectPath} />;\r\n  }\r\n\r\n  const submitHandler = event => {\r\n    event.preventDefault();\r\n    if (authForm.email.valid && authForm.password.valid) {\r\n      props.onAuth(authForm.email.value, authForm.password.value);\r\n    } else {\r\n      errorMessage = 'One of the fields is blank';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.Auth}>\r\n        {authRedirect}\r\n        <h1>Sign in</h1>\r\n        <form onSubmit={submitHandler}>\r\n          {errorMessage}\r\n          {form}\r\n          <Button btnType=\"Submit\">Sign In</Button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.auth.loading,\r\n    error: state.auth.error,\r\n    isAuthenticated: state.auth.token !== null,\r\n    authRedirectPath: state.auth.authRedirectPath\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email, password) =>\r\n          dispatch(actions.auth(email, password)),\r\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath(\"/\"))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n","import React, { Component } from \"react\";\r\nimport * as actions from \"../../../store/actions/index\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    this.props.onLogout();\r\n  }\r\n  render() {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogout: () => dispatch(actions.logout())\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React from 'react';\r\nimport { Input, Radio, Checkbox, Select, InputNumber, DatePicker } from 'antd';\r\nimport classes from './InputType.module.css';\r\nimport 'antd/lib/checkbox/style/css';\r\nimport 'antd/lib/select/style/css';\r\nimport moment from 'moment';\r\nimport 'antd/lib/input-number/style/css';\r\nimport 'antd/lib/input/style/css';\r\nimport 'antd/lib/date-picker/style/css';\r\n\r\nconst OptionType = props => {\r\n  const { Option } = Select;\r\n  let optionType = null;\r\n  const date = new Date();\r\n  const dateFormat = 'DD/MM/YYYY';\r\n\r\n  const disabledDate = current => {\r\n    return current && current < moment(date, dateFormat);\r\n  };\r\n\r\n  switch (props.inputType) {\r\n    case 'multi-option':\r\n      optionType = (\r\n        <div className={classes.InputType}>\r\n          <Radio onChange={props.onChange} value={props.answerOption}>\r\n            {props.answerOption}\r\n          </Radio>\r\n        </div>\r\n      );\r\n      break;\r\n    case 'textArea':\r\n      optionType = (\r\n        <textarea\r\n          style={{ maxHeight: '300px', height: '200px', resize: 'none' }}\r\n          onChange={props.onChange}\r\n          rows=\"4\"\r\n          cols=\"50\"\r\n        />\r\n      );\r\n      break;\r\n    case 'y/n':\r\n      optionType = (\r\n        <div className={classes.InputType}>\r\n          <Radio onChange={props.onChange} value=\"yes\">\r\n            Yes\r\n          </Radio>\r\n          <Radio onChange={props.onChange} value=\"no\">\r\n            No\r\n          </Radio>\r\n        </div>\r\n      );\r\n      break;\r\n    case 'date':\r\n      optionType = (\r\n        <DatePicker\r\n          defaultValue={moment(date, dateFormat)}\r\n          format={dateFormat}\r\n          disabledDate={disabledDate}\r\n          onChange={props.onChange}\r\n        />\r\n      );\r\n      break;\r\n    case 'input':\r\n      optionType = (\r\n        <div className={classes.InputType}>\r\n          <Input\r\n            style={{ width: '200px', maxHeight: '30px' }}\r\n            onChange={props.onChange}\r\n            value={props.answerOption}\r\n          >\r\n            {props.answerOption}\r\n          </Input>\r\n        </div>\r\n      );\r\n      break;\r\n    case 'multi-checkbox':\r\n      optionType = (\r\n        <div className={classes.InputType}>\r\n          <Checkbox value={props.answerOption} onChange={props.onChange}>\r\n            {props.answerOption}\r\n          </Checkbox>\r\n        </div>\r\n      );\r\n      break;\r\n    case 'dropdown':\r\n      optionType = (\r\n        <div className={classes.InputType}>\r\n          <Option value={props.answerOption}>{props.answerOption}</Option>\r\n        </div>\r\n      );\r\n      break;\r\n    case 'number':\r\n      optionType = (\r\n        <div className={classes.InputType}>\r\n          <InputNumber\r\n            style={{ width: '200px', maxHeight: '30px' }}\r\n            max={10000000}\r\n            min={1000}\r\n            defaultValue={1000}\r\n            formatter={value => `£ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n            parser={value => value.replace(/\\£\\s?|(,*)/g, '')}\r\n            onChange={props.onChange}\r\n            // value={''}\r\n          >\r\n            {props.answerOption}\r\n          </InputNumber>\r\n        </div>\r\n      );\r\n      break;\r\n    default:\r\n      optionType = null;\r\n  }\r\n\r\n  return optionType;\r\n};\r\n\r\nexport default OptionType;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Classes from './CreateProject.module.css';\r\nimport OptionType from '../../Components/InputType/InputType';\r\nimport { Radio, Form, Checkbox, Select, Button } from 'antd';\r\nimport 'antd/lib/radio/style/css';\r\nimport 'antd/lib/button/style/css';\r\nimport 'antd/lib/date-picker/style/css';\r\nimport Spinner from '../../Components/UI/Spinner/Spinner';\r\n\r\nconst CreateProject = props => {\r\n  const [questionnaireForm, setQuestionnaireForm] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  const inputChangeHandler = (event, questionId, date) => {\r\n    event.preventDefault();\r\n    let updatedQuestionnaireForm = [...questionnaireForm];\r\n    updatedQuestionnaireForm.map(\r\n      questions => questions.id === questionId && (questions.answer = [event.target.value])\r\n    );\r\n    updatedQuestionnaireForm = showOrHideQuestionOne(updatedQuestionnaireForm);\r\n    setQuestionnaireForm(showOrHideQuestions(updatedQuestionnaireForm));\r\n  };\r\n\r\n  const datePickerHandler = (questionId, date, dateString) => {\r\n    let updatedQuestionnaireForm = [...questionnaireForm];\r\n    updatedQuestionnaireForm.map(\r\n      questions => questions.id === questionId && (questions.answer = [dateString])\r\n    );\r\n    setQuestionnaireForm(updatedQuestionnaireForm);\r\n  };\r\n\r\n  const showOrHideQuestions = updatedQuestionnaireForm => {\r\n    updatedQuestionnaireForm.map(question => {\r\n      if (question.id === 17) {\r\n        updatedQuestionnaireForm.filter(oldQuestion =>\r\n          oldQuestion.answer.map(answer =>\r\n            answer === 'no' && oldQuestion.id === 16\r\n              ? (question.isShown = false) +\r\n                (question.shouldValidate = false) +\r\n                (question.answer = [])\r\n              : answer === 'yes' &&\r\n                oldQuestion.id === 16 &&\r\n                (question.isShown = true) + (question.shouldValidate = true)\r\n          )\r\n        );\r\n      }\r\n    });\r\n\r\n    return updatedQuestionnaireForm;\r\n  };\r\n\r\n  const showOrHideQuestionOne = updatedQuestionnaireForm => {\r\n    let question1;\r\n\r\n    updatedQuestionnaireForm.map(\r\n      question =>\r\n        question.id === 1 &&\r\n        question.answer.map(answer => {\r\n          return (question1 = answer === 'I would like to submit a new Simplify idea');\r\n        })\r\n    );\r\n\r\n    !question1\r\n      ? updatedQuestionnaireForm.map(question =>\r\n          question.id <= 26\r\n            ? (question.isShown = true) + (question.shouldValidate = true)\r\n            : question.id >= 27\r\n            ? (question.isShown = false) +\r\n              (question.shouldValidate = false) +\r\n              (question.answer = [])\r\n            : null\r\n        )\r\n      : updatedQuestionnaireForm.map(question =>\r\n          question.id === 1\r\n            ? (question.isShown === true) + (question.shouldValidate === true)\r\n            : question.id <= 26\r\n            ? (question.isShown = false) +\r\n              (question.shouldValidate = false) +\r\n              (question.answer = [])\r\n            : question.id >= 27 && (question.isShown = true) + (question.shouldValidate = true)\r\n        );\r\n\r\n    return updatedQuestionnaireForm;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const url = 'http://localhost:8080/projects/questionnaire';\r\n    const method = 'GET';\r\n    const header = { 'Content-Type': 'application/json' };\r\n\r\n    fetch(url, {\r\n      method: method,\r\n      headers: header\r\n    })\r\n      .then(res => {\r\n        if (!res.ok) {\r\n          throw new Error(res.message || 'Failed to get fetch');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        const data = resData.questionnaire.map(questions => {\r\n          return {\r\n            id: questions.id,\r\n            question: questions.question,\r\n            isShown: questions.id === 1,\r\n            shouldValidate: questions.id === 1,\r\n            optionType: questions.optionType,\r\n            options: questions.options.map(option => option),\r\n            answer: []\r\n          };\r\n        });\r\n        setQuestionnaireForm(data);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const onSubmitHandler = async event => {\r\n    event.preventDefault();\r\n    if (validateAnswers()) {\r\n      return;\r\n    }\r\n    setError(null);\r\n    const url = 'http://localhost:8080/projects/createProject';\r\n    const method = 'POST';\r\n    const header = { 'Content-Type': 'application/json' };\r\n\r\n    const questions = questionnaireForm.map(questions => {\r\n      return {\r\n        id: questions.id,\r\n        question: questions.question,\r\n        answers: questions.answer\r\n      };\r\n    });\r\n\r\n    const projectTitle = getQuestionAnswer(28, questions);\r\n    const projectType =\r\n      getQuestionAnswer(1, questions) === 'I would like to submit a new Simplify idea'\r\n        ? 'Simplify'\r\n        : 'New Change';\r\n    const newProject = {\r\n      name: projectTitle || `project ${Math.round(Math.random() * (10000 - 1 + 1) + 1)}`,\r\n      projectType: projectType,\r\n      projectSize: projectType !== 'Simplify' ? 'Large' : '',\r\n      questions: questions\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: method,\r\n        headers: header,\r\n        body: JSON.stringify({\r\n          newProject: newProject\r\n        })\r\n      });\r\n      const resData = await response.json();\r\n      props.history.push('/create-project/success');\r\n      if (!response.ok) {\r\n        throw new Error(response.message || 'Failed to post data');\r\n      } else {\r\n        console.log(resData.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getQuestionAnswer = (questionId, questions) => {\r\n    let currentAnswer;\r\n    questions.find(\r\n      question =>\r\n        question.id === questionId &&\r\n        question.answers.map(answer => {\r\n          return (currentAnswer = answer);\r\n        })\r\n    );\r\n    return currentAnswer;\r\n  };\r\n\r\n  const validateAnswers = () => {\r\n    let currentError = false;\r\n    questionnaireForm.filter(\r\n      question =>\r\n        question.shouldValidate &&\r\n        question.answer.length === 0 &&\r\n        question.id !== 2 &&\r\n        setError(\r\n          'Please ensure all the necessary questions marked with an asterisk (*) are answered'\r\n        ) + (currentError = true)\r\n    );\r\n    return currentError;\r\n  };\r\n\r\n  const optionTypeHandler = (question, option) => {\r\n    let optionType = null;\r\n    switch (option) {\r\n      case 'multi-option':\r\n        optionType = (\r\n          <Radio.Group>\r\n            {question.options.map((answerOption, index) => (\r\n              <OptionType\r\n                onChange={event => inputChangeHandler(event, question.id)}\r\n                inputType={question.optionType}\r\n                key={index}\r\n                answerOption={answerOption}\r\n              />\r\n            ))}\r\n            {question.options.map(\r\n              answerOption =>\r\n                answerOption === 'other' && (\r\n                  <OptionType\r\n                    onChange={event => inputChangeHandler(event, question.id)}\r\n                    inputType=\"input\"\r\n                    key={question.id}\r\n                  />\r\n                )\r\n            )}\r\n          </Radio.Group>\r\n        );\r\n        return optionType;\r\n      case 'textArea':\r\n        optionType = (\r\n          <OptionType\r\n            onChange={event => inputChangeHandler(event, question.id)}\r\n            inputType={question.optionType}\r\n          />\r\n        );\r\n        return optionType;\r\n      case 'multi-checkbox':\r\n        optionType = (\r\n          <Checkbox.Group>\r\n            {question.options.map((answerOption, index) => (\r\n              <OptionType\r\n                onChange={event => inputChangeHandler(event, question.id)}\r\n                inputType={question.optionType}\r\n                key={index}\r\n                answerOption={answerOption}\r\n              />\r\n            ))}\r\n          </Checkbox.Group>\r\n        );\r\n        return optionType;\r\n      case 'date':\r\n        optionType = (\r\n          <OptionType\r\n            onChange={(date, dateString) => datePickerHandler(question.id, date, dateString)}\r\n            inputType={question.optionType}\r\n          />\r\n        );\r\n        return optionType;\r\n      case 'input':\r\n        optionType = (\r\n          <OptionType\r\n            onChange={event => inputChangeHandler(event, question.id)}\r\n            inputType={question.optionType}\r\n          />\r\n        );\r\n        return optionType;\r\n      case 'y/n':\r\n        optionType = (\r\n          <Radio.Group>\r\n            <OptionType\r\n              onChange={event => inputChangeHandler(event, question.id)}\r\n              inputType={question.optionType}\r\n            />\r\n          </Radio.Group>\r\n        );\r\n        return optionType;\r\n      case 'dropdown':\r\n        optionType = (\r\n          <Select defaultValue=\"\" style={{ minWidth: '300px' }} onChange=\"\">\r\n            {question.options.map((answerOption, index) => (\r\n              <OptionType inputType={question.optionType} key={index} answerOption={answerOption} />\r\n            ))}\r\n          </Select>\r\n        );\r\n        return optionType;\r\n      case 'number':\r\n        optionType = (\r\n          <OptionType\r\n            onChange={event => inputChangeHandler(event, question.id)}\r\n            inputType={question.optionType}\r\n          />\r\n        );\r\n        return optionType;\r\n      default:\r\n        return optionType;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={Classes.CreateProject}>\r\n        <h3 style={{ display: 'inline-block', width: '40rem' }}>\r\n          This is a form to submit any ideas you may have not all parts of the form need to be\r\n          filled out\r\n        </h3>\r\n        {error && (\r\n          <h4\r\n            style={{\r\n              border: '1px solid #a33a3a',\r\n              width: '40rem',\r\n              display: 'inline-block',\r\n              background: '#ffe0e0',\r\n              color: '#ba3939'\r\n            }}\r\n          >\r\n            {error}\r\n          </h4>\r\n        )}\r\n        <Form>\r\n          {questionnaireForm.map(\r\n            question =>\r\n              question.isShown === true && (\r\n                <div className={Classes.Box} key={question.id}>\r\n                  <h2>{question.question}</h2>\r\n                  {optionTypeHandler(question, question.optionType)}\r\n                </div>\r\n              )\r\n          )}\r\n        </Form>\r\n        <Button\r\n          style={{ background: 'green', borderColor: 'none' }}\r\n          color=\"green\"\r\n          type=\"primary\"\r\n          className={Classes.Button}\r\n          onClick={event =>\r\n            onSubmitHandler(event) + window.scrollTo({ top: 0, behavior: 'smooth' })\r\n          }\r\n        >\r\n          Submit\r\n        </Button>\r\n        <br></br>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default CreateProject;\r\n","import React from 'react';\r\nimport { Button, Form, Input, Modal, Select } from 'antd';\r\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nclass AddUserModal extends React.Component {\r\n  onSubmit = values => {\r\n    this.props.onSubmit(values);\r\n    this.props.hideModal();\r\n  };\r\n\r\n  render() {\r\n    const { visible, hideModal } = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        width={500}\r\n        title=\"Add New User\"\r\n        onCancel={hideModal}\r\n        destroyOnClose={true}\r\n        visible={visible}\r\n        footer={[\r\n          <Button key=\"Cancel\" onClick={hideModal}>\r\n            Cancel\r\n          </Button>,\r\n          <Button key=\"submit\" type=\"primary\" form=\"AddUserForm\" htmlType=\"submit\">\r\n            {'Add'}\r\n          </Button>\r\n        ]}\r\n      >\r\n        <Form id=\"AddUserForm\" layout=\"vertical\" onFinish={this.onSubmit}>\r\n          <FormItem\r\n            label=\"First Name\"\r\n            name=\"firstName\"\r\n            rules={[\r\n              {\r\n                whitespace: true,\r\n                required: true,\r\n                message: \"Please enter the new user's first name\"\r\n              }\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Ex. Wesley\" />\r\n          </FormItem>\r\n\r\n          <FormItem\r\n            label=\"Surname\"\r\n            name=\"surname\"\r\n            rules={[\r\n              {\r\n                whitespace: true,\r\n                required: true,\r\n                message: \"Please enter the user's surname\"\r\n              }\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Ex. Snipes\" />\r\n          </FormItem>\r\n\r\n          <FormItem\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            rules={[\r\n              { required: true, message: \"Please enter the new user's email\" },\r\n              {\r\n                pattern: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\r\n                message: 'Sorry, please enter a valid email'\r\n              }\r\n            ]}\r\n          >\r\n            <Input prefix={<MailOutlined />} placeholder=\"Ex. Wesley.Snipes@gmail.com\" />\r\n          </FormItem>\r\n\r\n          <FormItem\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            rules={[{ required: true, message: \"Please enter the new user's password\" }]}\r\n          >\r\n            <Input prefix={<LockOutlined />} placeholder=\"The User's Password\" />\r\n          </FormItem>\r\n\r\n          {/*<FormItem*/}\r\n          {/*label=\"Phone Number\"*/}\r\n          {/*name=\"phone\"*/}\r\n          {/*rules={[{*/}\r\n          {/*whitespace: true,*/}\r\n          {/*required: false,*/}\r\n          {/*message: \"Please enter a valid email\"*/}\r\n          {/*},*/}\r\n          {/*{*/}\r\n          {/*pattern: /^((\\+\\d{1,3}(-| )?\\(?\\d\\)?(-| )?\\d{1,3})|(\\(?\\d{2,3}\\)?))(-| )?(\\d{3,4})(-| )?(\\d{4})(( x| ext)\\d{1,5}){0,1}$/,*/}\r\n          {/*message: 'Invalid phone number'*/}\r\n          {/*}*/}\r\n          {/*]}*/}\r\n          {/*>*/}\r\n          {/*<Input prefix={<PhoneOutlined/>} placeholder=\"Ex. +44 7502719493\"/>*/}\r\n          {/*</FormItem>*/}\r\n\r\n          <FormItem\r\n            label=\"Role\"\r\n            extra=\"The role defines what permissions the user will have\"\r\n            name=\"role\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please select a user role'\r\n              }\r\n            ]}\r\n          >\r\n            <Select>\r\n              <Option key={'ProjectManager'} value={'manager'}>\r\n                {'Project Manager'}\r\n              </Option>\r\n              <Option key={'employee'} value={'employee'}>\r\n                {'Employee'}\r\n              </Option>\r\n              <Option key={'TransformationTeam'} value={'transformationTeam'}>\r\n                {'Transformation Team'}\r\n              </Option>\r\n            </Select>\r\n          </FormItem>\r\n\r\n          <FormItem\r\n            label=\"Initial Project\"\r\n            extra=\"You can add and change projects they are assigned to afterwards from the Projects dashboard\"\r\n            name=\"initialProject\"\r\n          >\r\n            <Select\r\n              showSearch\r\n              optionFilterProp=\"children\"\r\n              filterOption={(input, option) =>\r\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n              <Option key={'None'} value={null}>\r\n                {'None'}\r\n              </Option>\r\n              {this.props.switchItems}\r\n            </Select>\r\n          </FormItem>\r\n\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddUserModal;\r\n","import React from 'react';\r\nimport { Button, Form, Input, Modal, Select } from 'antd';\r\nimport { MailOutlined } from '@ant-design/icons';\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nclass EditUserModal extends React.Component {\r\n  onSubmit = values => {\r\n    values['userId'] = this.props.record?.id;\r\n    this.props.onSubmit(values);\r\n    this.props.hideModal();\r\n  };\r\n\r\n  render() {\r\n    const { visible, hideModal } = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        width={500}\r\n        title=\"Edit User\"\r\n        onCancel={hideModal}\r\n        destroyOnClose={true}\r\n        visible={visible}\r\n        footer={[\r\n          <Button key=\"Cancel\" onClick={hideModal}>\r\n            Cancel\r\n          </Button>,\r\n          <Button key=\"submit\" type=\"primary\" form=\"EditUserForm\" htmlType=\"submit\">\r\n            {'Submit'}\r\n          </Button>\r\n        ]}\r\n      >\r\n        <Form id=\"EditUserForm\" layout=\"vertical\" onFinish={this.onSubmit}>\r\n          <FormItem\r\n            label=\"First Name\"\r\n            name=\"firstName\"\r\n            initialValue={this.props.record?.firstName}\r\n            rules={[\r\n              {\r\n                whitespace: true,\r\n                required: true,\r\n                message: \"Please enter the new user's first name\"\r\n              }\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Ex. Wesley\" />\r\n          </FormItem>\r\n\r\n          <FormItem\r\n            label=\"Surname\"\r\n            name=\"surname\"\r\n            initialValue={this.props.record?.surname}\r\n            rules={[\r\n              {\r\n                whitespace: true,\r\n                required: true,\r\n                message: \"Please enter the user's surname\"\r\n              }\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Ex. Snipes\" />\r\n          </FormItem>\r\n\r\n          <FormItem\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            initialValue={this.props.record?.email}\r\n            rules={[\r\n              { required: true, message: \"Please enter the new user's email\" },\r\n              {\r\n                pattern: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\r\n                message: 'Sorry, please enter a valid email'\r\n              }\r\n            ]}\r\n          >\r\n            <Input prefix={<MailOutlined />} placeholder=\"Ex. Wesley.Snipes@gmail.com\" />\r\n          </FormItem>\r\n\r\n          <FormItem\r\n            label=\"Role\"\r\n            extra=\"The role defines what permissions the user will have\"\r\n            name=\"role\"\r\n            initialValue={this.props.record?.role}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please select a user role'\r\n              }\r\n            ]}\r\n          >\r\n            <Select>\r\n              <Option key={'ProjectManager'} value={'manager'}>\r\n                {'Project Manager'}\r\n              </Option>\r\n              <Option key={'employee'} value={'employee'}>\r\n                {'Employee'}\r\n              </Option>\r\n              <Option key={'TransformationTeam'} value={'transformationTeam'}>\r\n                {'Transformation Team'}\r\n              </Option>\r\n            </Select>\r\n          </FormItem>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditUserModal;\r\n","import React from 'react';\r\nimport { Button, Form, Input, Modal, Select } from 'antd';\r\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nclass EditUserModal extends React.Component {\r\n  onSubmit = () => {\r\n    this.props.onSubmit({'userId': this.props.record?.id});\r\n    this.props.hideModal();\r\n  };\r\n\r\n  render() {\r\n    const { visible, hideModal } = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        width={250}\r\n        title=\"Are you sure you want to delete this user?\"\r\n        onCancel={hideModal}\r\n        destroyOnClose={true}\r\n        visible={visible}\r\n        footer={[\r\n        ]}\r\n      >\r\n        <div style={{textAlign: \"left\", width: \"50%\", display: \"inline-block\"}}>\r\n        <Button key=\"Cancel\" onClick={hideModal}>\r\n          Cancel\r\n        </Button>\r\n        </div>\r\n        <div style={{textAlign: \"right\", width: \"50%\", display: \"inline-block\"}}>\r\n        <Button type=\"primary\" danger key=\"Confirm\" onClick={this.onSubmit}>\r\n          <b>Confirm</b>\r\n        </Button>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditUserModal;\r\n","import React from 'react';\r\nimport classes from './Users.module.css';\r\nimport { addUser, editUser, deleteUser, getUser, getUsers } from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Divider, Select, Table } from 'antd';\r\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { UserAddOutlined } from '@ant-design/icons';\r\nimport AddUserModal from './Modals/AddUserModal';\r\nimport EditUserModal from './Modals/EditUserModal';\r\nimport DeleteUserModal from './Modals/DeleteUserModal';\r\n\r\nconst { Option } = Select;\r\nconst roles = {\r\n  transformationTeam: 'Transformation Team',\r\n  manager: 'Project Manager',\r\n  employee: 'Employee'\r\n};\r\n\r\nclass Users extends React.Component {\r\n  refreshUsers = () => this.props.dispatch(getUsers());\r\n\r\n  componentDidMount() {\r\n    this.refreshUsers();\r\n  }\r\n\r\n  state = {\r\n    addUserModalVisible: false,\r\n    editUserModalVisible: false,\r\n    deleteUserModalVisible: false,\r\n    userToEdit: null,\r\n    projectId: null\r\n  };\r\n\r\n  showAddUserModal = () => this.setState({ addUserModalVisible: true });\r\n\r\n  hideAddUserModal = () => this.setState({ addUserModalVisible: false });\r\n\r\n  showEditUserModal = user => this.setState({ editUserModalVisible: true, userToEdit: user });\r\n\r\n  hideEditUserModal = () => this.setState({ editUserModalVisible: false, userToEdit: null });\r\n\r\n  showDeleteUserModal = user => this.setState({ deleteUserModalVisible: true, userToEdit: user });\r\n\r\n  hideDeleteUserModal = () => this.setState({ deleteUserModalVisible: false, userToEdit: null });\r\n\r\n  submitUser = values => {\r\n    this.props.dispatch(addUser(values));\r\n  };\r\n\r\n  editUser = values => {\r\n    this.props.dispatch(editUser(values));\r\n  };\r\n\r\n  deleteUser = values => {\r\n    this.props.dispatch(deleteUser(values)); //this.deleteUser(record.id)\r\n  };\r\n\r\n  onSwitchChange = value => {\r\n    this.setState({ projectId: value });\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: 'First name',\r\n        key: 'Firstname',\r\n        render: (text, record) => <p key={record.firstName}>{record.firstName}</p>\r\n      },\r\n      {\r\n        title: 'Surname',\r\n        key: 'Surname',\r\n        render: (text, record) => <p key={record.surname}>{record.surname}</p>\r\n      },\r\n      {\r\n        title: 'Email',\r\n        key: 'Email',\r\n        render: (text, record) => <p key={record.email}>{record.email}</p>\r\n      },\r\n      {\r\n        title: 'Role',\r\n        key: 'Role',\r\n        width: '15%',\r\n        render: (text, record) => <p key={record.role}>{roles[record.role]}</p>\r\n      },\r\n      {\r\n        title: 'Action',\r\n        key: 'action',\r\n        width: '20%',\r\n        render: (text, record) => {\r\n          return (\r\n            <>\r\n              <span>\r\n                <Button type=\"link\" onClick={() => this.showEditUserModal(record)}>\r\n                  <EditOutlined /> Edit\r\n                </Button>\r\n\r\n                <Divider type=\"vertical\" />\r\n\r\n                <Button type=\"link\" onClick={() => this.showDeleteUserModal(record)}>\r\n                  <DeleteOutlined /> Delete\r\n                </Button>\r\n              </span>\r\n            </>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n  }\r\n\r\n  render() {\r\n    const { users, loading } = this.props;\r\n    const projectId = this.state.projectId;\r\n\r\n    let switchItems = [];\r\n    let displayUsers = null;\r\n    let noProjects = null;\r\n    if (users.length !== 1) {\r\n      switchItems = [];\r\n      for (let [key, value] of Object.entries(users)) {\r\n        switchItems.push(\r\n          <Option value={key} key={key}>\r\n            {value?.project.name}\r\n          </Option>\r\n        );\r\n      }\r\n      displayUsers = users[projectId]?.users;\r\n      if (projectId == null && users.length !== 0) {\r\n        this.setState({ projectId: Object.keys(users)[0] });\r\n      }\r\n    } else {\r\n      displayUsers = users;\r\n      noProjects = <h3>There are no active projects for which to display users.</h3>;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className={classes.Users}>\r\n          <h1>Project Users</h1>\r\n          {noProjects}\r\n          <div style={{ textAlign: 'left', width: '50%', display: 'inline-block' }}>\r\n            <Select\r\n              showSearch\r\n              style={{ width: 200 }}\r\n              optionFilterProp=\"children\"\r\n              onChange={this.onSwitchChange}\r\n              filterOption={(input, option) =>\r\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n              }\r\n              value={projectId}\r\n            >\r\n              {switchItems}\r\n            </Select>\r\n          </div>\r\n\r\n          <div style={{ textAlign: 'right', width: '50%', display: 'inline-block' }}>\r\n            <Button\r\n              style={{ marginBottom: '10px' }}\r\n              type=\"primary\"\r\n              icon={<UserAddOutlined />}\r\n              onClick={this.showAddUserModal}\r\n            >\r\n              <b> Add User</b>\r\n            </Button>\r\n          </div>\r\n\r\n          <Table\r\n            bordered\r\n            dataSource={displayUsers}\r\n            columns={this.columns}\r\n            scroll={{ x: '100%' }}\r\n            loading={loading}\r\n          />\r\n        </div>\r\n\r\n        <AddUserModal\r\n          visible={this.state.addUserModalVisible}\r\n          hideModal={this.hideAddUserModal}\r\n          projectId={projectId}\r\n          switchItems={switchItems}\r\n          onSubmit={this.submitUser}\r\n        />\r\n\r\n        <EditUserModal\r\n          visible={this.state.editUserModalVisible}\r\n          hideModal={this.hideEditUserModal}\r\n          record={this.state.userToEdit}\r\n          onSubmit={this.editUser}\r\n        />\r\n\r\n        <DeleteUserModal\r\n          visible={this.state.deleteUserModalVisible}\r\n          hideModal={this.hideDeleteUserModal}\r\n          record={this.state.userToEdit}\r\n          onSubmit={this.deleteUser}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    users: state.users.users,\r\n    loading: state.users.loading\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Users);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Tag, Table, Button, Input } from 'antd';\r\n\r\nimport 'antd/lib/table/style/css';\r\nimport 'antd/lib/button/style/css';\r\nimport 'antd/lib/input/style/css';\r\nimport 'antd/lib/tag/style/css';\r\nimport classes from './AssignUsers.module.css';\r\nimport './index-2.css';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions';\r\nimport { backendUrl } from '../../store/utility';\r\n\r\nconst AssignUsers = props => {\r\n  const { addUserToProject, getProjectUsers, removeUserFromProject, setProjectUsers } = props;\r\n  const [loadingButton, setLoadingButton] = useState(false);\r\n  const [loadingTable, setLoadingTable] = useState(false);\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n  const [tableFiltered, setTableFiltered] = useState(false);\r\n  // const [colours] = useState([\r\n  //   '#ffc0cb',\r\n  //   '#ff00ff',\r\n  //   '#ff0000',\r\n  //   '#108ee9',\r\n  //   '#f50',\r\n  //   '#999999',\r\n  //   '#333399',\r\n  //   '#407294',\r\n  //   '#87d068',\r\n  //   '#0000ff',\r\n  //   '#912CEE',\r\n  //   '#5ac18e',\r\n  //   '#800000',\r\n  //   '#81d8d0'\r\n  // ]);\r\n  const [dataSource, setDataSource] = useState(null);\r\n  const [filterTable, setFilterTable] = useState([]);\r\n  const { Search } = Input;\r\n  const columns = [\r\n    {\r\n      title: 'First Name',\r\n      dataIndex: 'firstName',\r\n      key: 'firstName'\r\n    },\r\n    {\r\n      title: 'Surname',\r\n      dataIndex: 'surname',\r\n      key: 'surname'\r\n    },\r\n    {\r\n      title: 'Role',\r\n      dataIndex: 'role',\r\n      key: 'role'\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      key: 'email'\r\n    }\r\n  ];\r\n\r\n  const projectId = props.location.pathname.split('/').pop(-1);\r\n\r\n  useEffect(() => {\r\n    const fetchTableData = async () => {\r\n      setLoadingTable(true);\r\n      try {\r\n        const url = `${backendUrl()}/users/employees`;\r\n        const method = 'POST';\r\n        const token = localStorage.getItem('token');\r\n        const header = { Authorization: 'Bearer ' + token, 'Content-Type': 'application/json' };\r\n\r\n        const response = await fetch(url, {\r\n          method: method,\r\n          headers: header,\r\n          body: JSON.stringify({\r\n            role: props.role\r\n          })\r\n        });\r\n\r\n        const resData = await response.json();\r\n\r\n        if (!response.ok) {\r\n          throw new Error(response.message || 'No users found!');\r\n        } else {\r\n          setDataSource([...resData.users]);\r\n        }\r\n        setLoadingTable(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    if (props.role !== 'employee') {\r\n      fetchTableData();\r\n    }\r\n    getProjectUsers(projectId);\r\n  }, [getProjectUsers, props.role]);\r\n\r\n  let listOfUsers;\r\n  listOfUsers = props.users;\r\n\r\n  const removeUserFromProjectHandler = userId => {\r\n    removeUserFromProject(userId, projectId);\r\n    listOfUsers.map((oldUserId, index) => {\r\n      if (userId === oldUserId.key) {\r\n        return listOfUsers.splice(index, 1);\r\n      }\r\n      return oldUserId;\r\n    });\r\n    setProjectUsers(listOfUsers.flat());\r\n  };\r\n\r\n  const assignUsersHandler = () => {\r\n    setLoadingButton(true);\r\n    const oldUsers = [...listOfUsers];\r\n\r\n    let updatedUsers = selectedRowKeys.map(userId => {\r\n      let users;\r\n      [...dataSource].map(data => {\r\n        if (data.key === userId) {\r\n          return (users = data);\r\n        }\r\n        return users;\r\n      });\r\n      return users;\r\n    });\r\n\r\n    oldUsers.push(...updatedUsers);\r\n\r\n    addUserToProject(selectedRowKeys, projectId);\r\n    setProjectUsers(oldUsers);\r\n    setSelectedRowKeys([]);\r\n    setLoadingButton(false);\r\n  };\r\n\r\n  const searchHandler = value => {\r\n    const filteredData = dataSource.filter(o =>\r\n      Object.keys(o).some(k => String(o[k]).toLowerCase().includes(value.toLowerCase()))\r\n    );\r\n    setFilterTable(filteredData);\r\n    setTableFiltered(true);\r\n  };\r\n\r\n  const onSelectChange = selectedRowKeys => {\r\n    setSelectedRowKeys(selectedRowKeys);\r\n  };\r\n\r\n  const rowSelection = {\r\n    selectedRowKeys,\r\n    onChange: onSelectChange,\r\n    getCheckboxProps: record => {\r\n      const l = listOfUsers.map(oldUserId => {\r\n        return oldUserId.key === record.key;\r\n      });\r\n      return {\r\n        disabled: l.includes(true)\r\n      };\r\n    }\r\n  };\r\n\r\n  const hasSelected = selectedRowKeys.length > 0;\r\n  return (\r\n    <>\r\n      <div className={classes.AssignProjects}>\r\n        {/*{authRedirect}*/}\r\n        <h2> Employees assigned to this project</h2>\r\n        {listOfUsers.map(user => (\r\n          <Tag\r\n            onClose={() => removeUserFromProjectHandler(user.key)}\r\n            // color={colours[Math.round(Math.random() * colours.length) + 1]}\r\n            closable={\r\n              props.role === 'transformationTeam' ||\r\n              (props.role === 'manager' && user.role !== 'transformationTeam')\r\n            }\r\n            key={user.key}\r\n          >{`${user.firstName} ${user.surname}`}</Tag>\r\n        ))}\r\n      </div>\r\n      <div className={classes.User}>\r\n        {props.role !== 'employee' && (\r\n          <Search\r\n            placeholder={'Search'}\r\n            onSearch={searchHandler}\r\n            enterButton\r\n            allowClear\r\n            style={{ width: 300, marginBottom: 8, marginRight: 8 }}\r\n          />\r\n        )}\r\n      </div>\r\n      <div className={classes.Button}>\r\n        {props.role !== 'employee' && (\r\n          <Button\r\n            shape=\"round\"\r\n            onClick={() => assignUsersHandler()}\r\n            type=\"primary\"\r\n            loading={loadingButton}\r\n            disabled={!hasSelected}\r\n          >\r\n            {' '}\r\n            Assign to Project{' '}\r\n          </Button>\r\n        )}\r\n        <span style={{ marginLeft: 8 }}>\r\n          {hasSelected ? `Selected ${selectedRowKeys.length} users` : ''}\r\n        </span>\r\n      </div>\r\n      {props.role !== 'employee' ? (\r\n        <Table\r\n          rowSelection={{ ...rowSelection }}\r\n          rowClassName={record => {\r\n            const l = listOfUsers.map(oldUserId => {\r\n              return oldUserId.key === record.key;\r\n            });\r\n            return {\r\n              'disabled-row': l.includes(true)\r\n            };\r\n          }}\r\n          dataSource={!tableFiltered ? dataSource : filterTable}\r\n          columns={columns}\r\n          loading={loadingTable}\r\n          pagination={{ position: ['bottomCenter'], pageSizeOptions: [5, 10, 20, 30, 50, 100] }}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    assignUserError: state.assignUser.error,\r\n    error: state.auth.error,\r\n    isAuthenticated: state.auth.token !== null,\r\n    authRedirectPath: state.auth.authRedirectPath,\r\n    role: state.auth.role,\r\n    users: state.assignUser.users\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addUserToProject: (listOfUserId, projectId) =>\r\n      dispatch(actions.addUserToProject(listOfUserId, projectId)),\r\n    getProjectUsers: projectId => dispatch(actions.getProjectUsers(projectId)),\r\n    removeUserFromProject: (userId, projectId) =>\r\n      dispatch(actions.removeUserFromProject(userId, projectId)),\r\n    setProjectUsers: listOfUsers => dispatch(actions.getProjectUserSuccess(listOfUsers))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AssignUsers);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport classes from './Projects.module.css';\r\nimport { Tag, Tooltip, Button } from 'antd';\r\nimport 'antd/lib/tag/style';\r\nimport 'antd/lib/tooltip/style';\r\nimport 'antd/lib/button/style';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport * as actions from '../../store/actions';\r\nimport { backendUrl } from '../../store/utility';\r\n\r\nconst Projects = props => {\r\n  const [projects, setProjects] = useState([]);\r\n  const { removeUserFromProject } = props;\r\n\r\n  useEffect(() => {\r\n    const userId = props.userId;\r\n    const role = props.role;\r\n\r\n    const url = `${backendUrl()}/projects/getMyProjects`;\r\n    const method = 'post';\r\n    const header = { 'Content-Type': 'application/json' };\r\n    fetch(url, {\r\n      method: method,\r\n      headers: header,\r\n      body: JSON.stringify({ userId: userId, role: role })\r\n    })\r\n      .then(res => {\r\n        if (res.status === 422) {\r\n          throw new Error('Error');\r\n        } else if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Error');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        console.log('projects consoled', resData);\r\n        const data = resData.projects.flatMap(projects => projects);\r\n        setProjects(data);\r\n      })\r\n      .catch(error => {\r\n        console.log('error occur', error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.Projects}>\r\n      <h1>All Projects1</h1>\r\n      <table className={classes.Table}>\r\n        <thead>\r\n          <tr>\r\n            <th>Project Name</th>\r\n            <th>Manager Name</th>\r\n            <th>Project Status</th>\r\n            <th>Project Size</th>\r\n            <th>Quick Win</th>\r\n            <th>Project Type</th>\r\n            <th>Users</th>\r\n            <th>Project Created At</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {projects.map(project => {\r\n            return (\r\n              <tr>\r\n                <td>\r\n                  <Link to={`/projectinfo/${project.id}`}> {project.name}</Link>\r\n                </td>\r\n                <td>{!project.managerName ? 'No Manager Assigned' : `${project.managerName}`}</td>\r\n                <td>{project.projectStatus}</td>\r\n                <td>{project.projectSize}</td>\r\n                <td>{project.quickWin ? 'True' : 'False'}</td>\r\n                <td>{project.projectType}</td>\r\n                <td>\r\n                  {project.users.map(user => (\r\n                    <>\r\n                      <Tooltip key={Math.random(1, 39393393)} placement=\"top\" title={user.role}>\r\n                        <Tag\r\n                          onClose={() => removeUserFromProject(user.id, project.id)}\r\n                          closable={\r\n                            props.role === 'transformationTeam' ||\r\n                            (props.role === 'manager' && user.role !== 'transformationTeam')\r\n                          }\r\n                        >{`${user.firstName} ${user.surname}`}</Tag>\r\n                      </Tooltip>\r\n                    </>\r\n                  ))}\r\n                  {props.role !== 'employee' && (\r\n                    <div style={{ marginTop: '10px' }} className={classes.antBtn}>\r\n                      <Link to={`/assign-projects/${project.id}`}>Add users</Link>\r\n                    </div>\r\n                  )}\r\n                </td>\r\n                <td>{project.createdAt}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    role: state.auth.role,\r\n    userId: state.auth.userId\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    removeUserFromProject: (userId, projectId) =>\r\n      dispatch(actions.removeUserFromProject(userId, projectId))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Projects);\r\n","import React from 'react';\r\nimport { Button, Form, Input, Modal, Select } from 'antd';\r\nimport { MailOutlined } from '@ant-design/icons';\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nclass EditProjectModal extends React.Component {\r\n  onSubmit = values => {\r\n    values['projectId'] = this.props.record?.id;\r\n    this.props.onSubmit(values);\r\n    this.props.hideModal();\r\n  };\r\n\r\n  render() {\r\n    const { visible, hideModal } = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        width={500}\r\n        title=\"Edit A Project\"\r\n        onCancel={hideModal}\r\n        destroyOnClose={true}\r\n        visible={visible}\r\n        footer={[\r\n          <Button key=\"Cancel\" onClick={hideModal}>\r\n            Cancel\r\n          </Button>,\r\n          <Button key=\"submit\" type=\"primary\" form=\"EditProjectForm\" htmlType=\"submit\">\r\n            {'Submit'}\r\n          </Button>\r\n        ]}\r\n      >\r\n        <Form id=\"EditUserForm\" layout=\"vertical\" onFinish={this.onSubmit}>\r\n          <FormItem>\r\n            label=\"Project Name\" name=\"projectName\" initialValue={this.props.record?.projectName}\r\n            rules=\r\n            {[\r\n              {\r\n                whitespace: true,\r\n                required: true,\r\n                message: 'Please enter the new project Name'\r\n              }\r\n            ]}\r\n            >\r\n          </FormItem>\r\n          <FormItem>\r\n            label=\"Manager Name\" name=\"managerName\" initialValue={this.props.record?.managerName}\r\n            rules=\r\n            {[\r\n              {\r\n                whitespace: true,\r\n                required: true,\r\n                message: 'Please enter the new managers Name'\r\n              }\r\n            ]}\r\n            >\r\n          </FormItem>\r\n          <FormItem>\r\n            label=\"Project Status\" name=\"projectStatus\" initialValue=\r\n            {this.props.record?.projectStatus}\r\n            rules=\r\n            {[\r\n              {\r\n                required: true,\r\n                message: 'Please enter new status'\r\n              }\r\n            ]}\r\n            >\r\n            <Select>\r\n              <Option key={'true'} value={'true'}>\r\n                {'true'}\r\n              </Option>\r\n              <Option key={'false'} value={'false'}>\r\n                {'false'}\r\n              </Option>\r\n            </Select>\r\n          </FormItem>\r\n          <FormItem>\r\n            label=\"Project Size\" name=\"projectSize\" initialValue={this.props.record?.projectSize}\r\n            rules=\r\n            {[\r\n              {\r\n                whitespace: true,\r\n                required: true,\r\n                message: 'Please enter the new project Size'\r\n              }\r\n            ]}\r\n            >\r\n          </FormItem>\r\n          <FormItem>\r\n            label=\"Quick Win\" name=\"quickWin\" initialValue={this.props.record?.quickWin}\r\n            rules=\r\n            {[\r\n              {\r\n                whitespace: true,\r\n                required: true,\r\n                message: 'Please enter if project is Quick win or not'\r\n              }\r\n            ]}\r\n            >\r\n          </FormItem>\r\n          <FormItem>\r\n            label=\"Project Type\" name=\"projectType\" initialValue={this.props.record?.projectType}\r\n            rules=\r\n            {[\r\n              {\r\n                whitespace: true,\r\n                required: true,\r\n                message: 'Please enter the new project type'\r\n              }\r\n            ]}\r\n            >\r\n          </FormItem>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditProjectModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Form, Modal, Select } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions';\r\nimport classes from './../Projects/Projects.module.css';\r\nimport { backendUrl } from '../../store/utility';\r\nimport editProjectModal from './Modals/EditProjectModal';\r\nimport EditProjectModal from './Modals/EditProjectModal';\r\n\r\nconst ProjectInfo = props => {\r\n  const [id, setId] = useState('');\r\n  const [project, setProject] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  const [projectName, setProjectName] = useState('');\r\n  const [managerName, setManagerName] = useState('');\r\n  const [projectStatus, setProjectStatus] = useState('');\r\n  const [projectSize, setProjectSize] = useState('');\r\n  const [quickWin, setQuickWin] = useState('');\r\n  const [projectType, setProjectType] = useState('');\r\n\r\n  console.log('this is the propssssssss' + props);\r\n\r\n  const FormItem = Form.Item;\r\n  const Option = Select.Option;\r\n\r\n  // const editProjectModalVisible = useState(false);\r\n  // const projectToEdit = useState(null);\r\n  //\r\n  // const showEditProjectModal = project =>\r\n  //   this.setState({ editProjectModalVisible: true, projectToEdit: project });\r\n  //\r\n  // const hideEditProjectModal = () =>\r\n  //   this.setState({ editProjectModalVisible: false, projectToEdit: null });\r\n  //\r\n  // const editAProject = values => {\r\n  //   this.props.dispatch(editAProject(values));\r\n  // };\r\n\r\n  useEffect(() => {\r\n    let infoId = props.match.params.id;\r\n    setId(infoId);\r\n    const url = `${backendUrl()}/projects/projectDetails/` + infoId;\r\n    const method = 'GET';\r\n    const header = { 'Content-Type': 'application/json' };\r\n\r\n    fetch(url, {\r\n      method: method,\r\n      headers: header\r\n    })\r\n      .then(res => {\r\n        if (res.status === 422) {\r\n          throw new Error('Error');\r\n        } else if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Error');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        console.log('res data project info', resData);\r\n        setProject(resData.data);\r\n        setIsLoaded(true);\r\n      })\r\n      .catch(error => {\r\n        console.log('error occur', error);\r\n      });\r\n  }, []);\r\n\r\n  const deleteProject = routeType => {\r\n    let infoId = props.match.params.id;\r\n    setId(infoId);\r\n    const url = `http://localhost:8080/projects/${routeType}/ ` + infoId;\r\n    const method = 'GET';\r\n    const header = { 'Content-Type': 'application/json' };\r\n\r\n    fetch(url, {\r\n      method: method,\r\n      headers: header\r\n    })\r\n      .then(res => {\r\n        if (res.status === 422) {\r\n          throw new Error('Error');\r\n        } else if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Error');\r\n        }\r\n        console.log('check1');\r\n        return res.json();\r\n      })\r\n      .then(window.location.reload())\r\n      .catch(error => {\r\n        console.log('error occur', error);\r\n      });\r\n  };\r\n\r\n  const editProject = routeType => {\r\n    console.log('goes to edit project');\r\n    let infoId = props.match.params.id;\r\n    setId(infoId);\r\n    const url = `http://localhost:8080/projects/${routeType}/` + infoId;\r\n    const method = 'PUT';\r\n    const header = { 'Content-Type': 'application/json' };\r\n\r\n    fetch(url, {\r\n      method: method,\r\n      header: header,\r\n      body: {\r\n        projectName: projectName,\r\n        managerName: managerName,\r\n        projectStatus: projectStatus,\r\n        projectSize: projectSize,\r\n        quickWin: quickWin,\r\n        projectType: projectType\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (res.status === 422) {\r\n          throw new Error('Error');\r\n        } else if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Couldnt edit project');\r\n          console.log('there was an error editing project');\r\n        }\r\n        console.log('check edit is working');\r\n\r\n        res.json().then(json => {\r\n          console.log('this is the jsooooooooon' + json);\r\n        });\r\n        return res.json();\r\n      })\r\n      .catch(error => {\r\n        console.log('error occurred', error);\r\n      });\r\n  };\r\n\r\n  console.log(props.role);\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [isModalVisible2, setIsModalVisible2] = useState(false);\r\n  const [isModalVisible3, setIsModalVisible3] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n    deleteProject('deleteProject');\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const showModal2 = () => {\r\n    setIsModalVisible2(true);\r\n  };\r\n\r\n  const handleOk2 = () => {\r\n    setIsModalVisible2(false);\r\n    deleteProject('archiveProject');\r\n  };\r\n\r\n  const handleCancel2 = () => {\r\n    setIsModalVisible2(false);\r\n  };\r\n\r\n  const showModal3 = () => {\r\n    setIsModalVisible3(true);\r\n  };\r\n\r\n  const handleOk3 = () => {\r\n    setIsModalVisible3(false);\r\n    editProject('editProject');\r\n  };\r\n\r\n  const handleCancel3 = () => {\r\n    setIsModalVisible3(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Projects}>\r\n      <h1>Project Details</h1>\r\n      <table className={classes.Table}>\r\n        <thead>\r\n          <tr>\r\n            <th>Project Name</th>\r\n            <th>Manager Name</th>\r\n            <th>Proect Status</th>\r\n            <th>Project Size</th>\r\n            <th>Quick Win</th>\r\n            <th>Project Type</th>\r\n            <th>Project Created At</th>\r\n            <th>Score Board</th>\r\n            <th>Business Case</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {isLoaded ? (\r\n            <tr key={project.id}>\r\n              <td> {project.name}</td>\r\n              <td>{project.managerName}</td>\r\n              <td>{project.projectStatus}</td>\r\n              <td>{project.projectSize}</td>\r\n              <td>{project.quickWin}</td>\r\n              <td>{project.projectType}</td>\r\n              <td>{project.createdAt}</td>\r\n              <td>\r\n                <Link to={`/scoreboard/${project.id}`}>ScoreBoard</Link>{' '}\r\n              </td>\r\n              <td>\r\n                <Link to={`/businessCase/${project.id}`}>Business Case</Link>{' '}\r\n              </td>\r\n            </tr>\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"8\">Loading</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n\r\n      <div className={classes.ProjectInfo} style={{ float: 'right' }}>\r\n        {props.role === 'transformationTeam' && (\r\n          <>\r\n            <Modal\r\n              title=\"Edit project \"\r\n              visible={isModalVisible3}\r\n              onOk={handleOk3}\r\n              onCancel={handleCancel3}\r\n            >\r\n              <form>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"projectName\"\r\n                  value={projectName}\r\n                  onChange={e => {\r\n                    setProjectName(e.target.value);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"managerName\"\r\n                  value={managerName}\r\n                  onChange={e => {\r\n                    setManagerName(e.target.value);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"projectStatus\"\r\n                  value={projectStatus}\r\n                  onChange={e => {\r\n                    setProjectStatus(e.target.value);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"projectSize\"\r\n                  value={projectSize}\r\n                  onChange={e => {\r\n                    setProjectSize(e.target.value);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"quick win\"\r\n                  value={quickWin}\r\n                  onChange={e => {\r\n                    setQuickWin(e.target.value);\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"projectType\"\r\n                  value={projectType}\r\n                  onChange={e => {\r\n                    setProjectType(e.target.value);\r\n                  }}\r\n                />\r\n              </form>\r\n\r\n              {/*<Form>*/}\r\n              {/*  <FormItem>*/}\r\n              {/*    label=\"Project Name\" name=\"projectName\" initialValue=*/}\r\n              {/*    {props.projectName}*/}\r\n              {/*    rules=*/}\r\n              {/*    {[*/}\r\n              {/*      {*/}\r\n              {/*        whitespace: true,*/}\r\n              {/*        required: true,*/}\r\n              {/*        message: 'Please enter the new project Name'*/}\r\n              {/*      }*/}\r\n              {/*    ]}*/}\r\n              {/*    >*/}\r\n              {/*  </FormItem>*/}\r\n              {/*  <FormItem>*/}\r\n              {/*    label=\"Manager Name\" name=\"managerName\" initialValue=*/}\r\n              {/*    {props.managerName}*/}\r\n              {/*    rules=*/}\r\n              {/*    {[*/}\r\n              {/*      {*/}\r\n              {/*        whitespace: true,*/}\r\n              {/*        required: true,*/}\r\n              {/*        message: 'Please enter the new managers Name'*/}\r\n              {/*      }*/}\r\n              {/*    ]}*/}\r\n              {/*    >*/}\r\n              {/*  </FormItem>*/}\r\n\r\n              {/*  <FormItem>*/}\r\n              {/*    label=\"Project Status\" name=\"projectStatus\" initialValue=*/}\r\n              {/*    {props.projectStatus}*/}\r\n              {/*    rules=*/}\r\n              {/*    {[*/}\r\n              {/*      {*/}\r\n              {/*        required: true,*/}\r\n              {/*        message: 'Please enter new status'*/}\r\n              {/*      }*/}\r\n              {/*    ]}*/}\r\n              {/*    >*/}\r\n              {/*    <Select>*/}\r\n              {/*      <Option key={'true'} value={'true'}>*/}\r\n              {/*        {'true'}*/}\r\n              {/*      </Option>*/}\r\n              {/*      <Option key={'false'} value={'false'}>*/}\r\n              {/*        {'false'}*/}\r\n              {/*      </Option>*/}\r\n              {/*    </Select>*/}\r\n              {/*  </FormItem>*/}\r\n              {/*  <FormItem>*/}\r\n              {/*    label=\"Project Size\" name=\"projectSize\" initialValue=*/}\r\n              {/*    {props.projectSize}*/}\r\n              {/*    rules=*/}\r\n              {/*    {[*/}\r\n              {/*      {*/}\r\n              {/*        whitespace: true,*/}\r\n              {/*        required: true,*/}\r\n              {/*        message: 'Please enter the new project Size'*/}\r\n              {/*      }*/}\r\n              {/*    ]}*/}\r\n              {/*    >*/}\r\n              {/*  </FormItem>*/}\r\n              {/*  <FormItem>*/}\r\n              {/*    label=\"Quick Win\" name=\"quickWin\" initialValue={props.quickWin}*/}\r\n              {/*    rules=*/}\r\n              {/*    {[*/}\r\n              {/*      {*/}\r\n              {/*        whitespace: true,*/}\r\n              {/*        required: true,*/}\r\n              {/*        message: 'Please enter if project is Quick win or not'*/}\r\n              {/*      }*/}\r\n              {/*    ]}*/}\r\n              {/*    >*/}\r\n              {/*  </FormItem>*/}\r\n              {/*  <FormItem>*/}\r\n              {/*    label=\"Project Type\" name=\"projectType\" initialValue=*/}\r\n              {/*    {props.projectType}*/}\r\n              {/*    rules=*/}\r\n              {/*    {[*/}\r\n              {/*      {*/}\r\n              {/*        whitespace: true,*/}\r\n              {/*        required: true,*/}\r\n              {/*        message: 'Please enter the new project type'*/}\r\n              {/*      }*/}\r\n              {/*    ]}*/}\r\n              {/*    >*/}\r\n              {/*  </FormItem>*/}\r\n              {/*</Form>*/}\r\n            </Modal>\r\n            <Button type=\"primary\" onClick={showModal3}>\r\n              Edit\r\n            </Button>\r\n            &nbsp;&nbsp;&nbsp;{' '}\r\n            <Modal\r\n              title=\"Delete project \"\r\n              visible={isModalVisible}\r\n              onOk={handleOk}\r\n              onCancel={handleCancel}\r\n            >\r\n              <p>Are you sure you want to delete this project ?</p>\r\n            </Modal>\r\n            <Button type=\"primary\" onClick={showModal} danger>\r\n              Delete\r\n            </Button>\r\n            <Modal\r\n              title=\"Archive\"\r\n              visible={isModalVisible2}\r\n              onOk={handleOk2}\r\n              onCancel={handleCancel2}\r\n            >\r\n              <p>Are you sure you want to archive this project ?</p>\r\n            </Modal>\r\n            &nbsp;&nbsp;&nbsp;{' '}\r\n            <Button type=\"primary\" onClick={showModal2}>\r\n              Archive\r\n            </Button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    role: state.auth.role,\r\n    userId: state.auth.userId\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(ProjectInfo);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { backendUrl } from '../../store/utility';\r\nimport classes from './Scoreboard.module.css';\r\nimport Button from '../../Components/UI/Button/Button';\r\nimport { Helmet } from 'react-helmet';\r\nimport { ResponsiveBar } from '@nivo/bar';\r\n\r\nconst ScoreBoard = props => {\r\n  const [scoreboards, setScoreBoards] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const data = [\r\n    {\r\n      tasks: 'Tasks',\r\n      'hot dog': 38,\r\n      'hot dogColor': 'hsl(32, 70%, 50%)',\r\n      'Out Of Control': 13,\r\n      'Out Of ControlColor': 'hsl(85, 70%, 50%)',\r\n      'In Control': 8,\r\n      'In ControlColor': 'hsl(42, 70%, 50%)',\r\n      Critical: 12,\r\n      CriticalColor: 'hsl(164, 70%, 50%)'\r\n    }\r\n  ];\r\n  useEffect(() => {\r\n    const getScoreboardData = () => {\r\n      const projectId = props.location.pathname.split('/').pop(-1);\r\n      const url = `${backendUrl()}/scoreboards/getScoreBoard`;\r\n      const method = 'POST';\r\n      const header = { 'Content-Type': 'application/json' };\r\n\r\n      fetch(url, {\r\n        method: method,\r\n        headers: header,\r\n        body: JSON.stringify({ projectId: projectId })\r\n      })\r\n        .then(res => {\r\n          if (!res.ok) {\r\n            throw new Error('Error');\r\n          }\r\n          return res.json();\r\n        })\r\n        .then(resData => {\r\n          console.log(...resData.data);\r\n          setScoreBoards(resData.data);\r\n          setIsLoaded(true);\r\n        })\r\n        .catch(error => {\r\n          console.log('error occur', error);\r\n        });\r\n    };\r\n    getScoreboardData();\r\n  }, []);\r\n  return (\r\n    <div className={classes.Scoreboard}>\r\n      <Helmet>\r\n        <style>{'body { background-color: rgba(242, 242, 242, 1) }'}</style>\r\n      </Helmet>\r\n      <Button clicked={props.history.goBack} style={{ marginLeft: '30px' }} btnType=\"Back\">\r\n        &lt; Back\r\n      </Button>\r\n      <br />\r\n      <br />\r\n      <h1>Project Scoreboard</h1>\r\n      <div className={classes.RagCharts}>\r\n        <div style={{ height: '230px' }} className={classes.RagChart}>\r\n          <h3>Risks</h3>\r\n          <ResponsiveBar\r\n            data={data}\r\n            keys={['Critical', 'Out Of Control', 'In Control', 'fries']}\r\n            indexBy=\"tasks\"\r\n            margin={{ top: 20, right: 10, bottom: 130, left: 10 }}\r\n            layout=\"horizontal\"\r\n            valueScale={{ type: 'linear' }}\r\n            indexScale={{ type: 'band', round: true }}\r\n            colors={{ scheme: 'nivo' }}\r\n            defs={[\r\n              {\r\n                id: 'dots',\r\n                type: 'patternDots',\r\n                background: 'inherit',\r\n                color: '#38bcb2',\r\n                size: 4,\r\n                padding: 1,\r\n                stagger: true\r\n              },\r\n              {\r\n                id: 'lines',\r\n                type: 'patternLines',\r\n                background: 'inherit',\r\n                color: '#eed312',\r\n                rotation: -45,\r\n                lineWidth: 6,\r\n                spacing: 10\r\n              }\r\n            ]}\r\n            fill={[\r\n              {\r\n                match: {\r\n                  id: 'In Control'\r\n                },\r\n                id: 'lines'\r\n              }\r\n            ]}\r\n            borderColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\r\n            axisTop={null}\r\n            axisRight={null}\r\n            axisBottom={{\r\n              tickSize: 5,\r\n              tickPadding: 5,\r\n              tickRotation: 0,\r\n              legend: 'Tasks',\r\n              legendPosition: 'middle',\r\n              legendOffset: 32\r\n            }}\r\n            axisLeft={null}\r\n            labelTextColor={{ from: 'color', modifiers: [['darker', '1.6']] }}\r\n            legends={[\r\n              {\r\n                dataFrom: 'keys',\r\n                anchor: 'bottom',\r\n                direction: 'row',\r\n                justify: false,\r\n                translateX: 19,\r\n                translateY: 75,\r\n                itemsSpacing: 10,\r\n                itemWidth: 90,\r\n                itemHeight: 27,\r\n                itemDirection: 'left-to-right',\r\n                itemOpacity: 0.85,\r\n                symbolSize: 20,\r\n                effects: [\r\n                  {\r\n                    on: 'hover',\r\n                    style: {\r\n                      itemOpacity: 1\r\n                    }\r\n                  }\r\n                ]\r\n              }\r\n            ]}\r\n            animate={true}\r\n            motionStiffness={90}\r\n            motionDamping={15}\r\n          />\r\n        </div>\r\n        <div style={{ height: '230px' }} className={classes.RagChart}>\r\n          <h3>Objectives</h3>\r\n          <ResponsiveBar\r\n            data={data}\r\n            keys={['Critical', 'Out Of Control', 'In Control', 'fries']}\r\n            indexBy=\"tasks\"\r\n            margin={{ top: 20, right: 10, bottom: 130, left: 10 }}\r\n            layout=\"horizontal\"\r\n            valueScale={{ type: 'linear' }}\r\n            indexScale={{ type: 'band', round: true }}\r\n            colors={{ scheme: 'nivo' }}\r\n            defs={[\r\n              {\r\n                id: 'dots',\r\n                type: 'patternDots',\r\n                background: 'inherit',\r\n                color: '#38bcb2',\r\n                size: 4,\r\n                padding: 1,\r\n                stagger: true\r\n              },\r\n              {\r\n                id: 'lines',\r\n                type: 'patternLines',\r\n                background: 'inherit',\r\n                color: '#eed312',\r\n                rotation: -45,\r\n                lineWidth: 6,\r\n                spacing: 10\r\n              }\r\n            ]}\r\n            fill={[\r\n              {\r\n                match: {\r\n                  id: 'In Control'\r\n                },\r\n                id: 'lines'\r\n              }\r\n            ]}\r\n            borderColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\r\n            axisTop={null}\r\n            axisRight={null}\r\n            axisBottom={{\r\n              tickSize: 5,\r\n              tickPadding: 5,\r\n              tickRotation: 0,\r\n              legend: 'Tasks',\r\n              legendPosition: 'middle',\r\n              legendOffset: 32\r\n            }}\r\n            axisLeft={null}\r\n            labelTextColor={{ from: 'color', modifiers: [['darker', '1.6']] }}\r\n            legends={[\r\n              {\r\n                dataFrom: 'keys',\r\n                anchor: 'bottom',\r\n                direction: 'row',\r\n                justify: false,\r\n                translateX: 19,\r\n                translateY: 75,\r\n                itemsSpacing: 10,\r\n                itemWidth: 90,\r\n                itemHeight: 27,\r\n                itemDirection: 'left-to-right',\r\n                itemOpacity: 0.85,\r\n                symbolSize: 20,\r\n                effects: [\r\n                  {\r\n                    on: 'hover',\r\n                    style: {\r\n                      itemOpacity: 1\r\n                    }\r\n                  }\r\n                ]\r\n              }\r\n            ]}\r\n            animate={true}\r\n            motionStiffness={90}\r\n            motionDamping={15}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={classes.RagCharts}>\r\n        <div style={{ height: '230px' }} className={classes.RagChart}>\r\n          <h3>Actions</h3>\r\n          <ResponsiveBar\r\n            data={data}\r\n            keys={['Critical', 'Out Of Control', 'In Control', 'fries']}\r\n            indexBy=\"tasks\"\r\n            margin={{ top: 20, right: 10, bottom: 130, left: 10 }}\r\n            layout=\"horizontal\"\r\n            valueScale={{ type: 'linear' }}\r\n            indexScale={{ type: 'band', round: true }}\r\n            colors={{ scheme: 'nivo' }}\r\n            defs={[\r\n              {\r\n                id: 'dots',\r\n                type: 'patternDots',\r\n                background: 'inherit',\r\n                color: '#38bcb2',\r\n                size: 4,\r\n                padding: 1,\r\n                stagger: true\r\n              },\r\n              {\r\n                id: 'lines',\r\n                type: 'patternLines',\r\n                background: 'inherit',\r\n                color: '#eed312',\r\n                rotation: -45,\r\n                lineWidth: 6,\r\n                spacing: 10\r\n              }\r\n            ]}\r\n            fill={[\r\n              {\r\n                match: {\r\n                  id: 'In Control'\r\n                },\r\n                id: 'lines'\r\n              }\r\n            ]}\r\n            borderColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\r\n            axisTop={null}\r\n            axisRight={null}\r\n            axisBottom={{\r\n              tickSize: 5,\r\n              tickPadding: 5,\r\n              tickRotation: 0,\r\n              legend: 'Tasks',\r\n              legendPosition: 'middle',\r\n              legendOffset: 32\r\n            }}\r\n            axisLeft={null}\r\n            labelTextColor={{ from: 'color', modifiers: [['darker', '1.6']] }}\r\n            legends={[\r\n              {\r\n                dataFrom: 'keys',\r\n                anchor: 'bottom',\r\n                direction: 'row',\r\n                justify: false,\r\n                translateX: 19,\r\n                translateY: 75,\r\n                itemsSpacing: 10,\r\n                itemWidth: 90,\r\n                itemHeight: 27,\r\n                itemDirection: 'left-to-right',\r\n                itemOpacity: 0.85,\r\n                symbolSize: 20,\r\n                effects: [\r\n                  {\r\n                    on: 'hover',\r\n                    style: {\r\n                      itemOpacity: 1\r\n                    }\r\n                  }\r\n                ]\r\n              }\r\n            ]}\r\n            animate={true}\r\n            motionStiffness={90}\r\n            motionDamping={15}\r\n          />\r\n        </div>\r\n        <div style={{ height: '230px' }} className={classes.RagChart}>\r\n          <h3>Something else</h3>\r\n        </div>\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <tr> \r\n            <th>Action Narrative </th>\r\n            <th>Objective Narrative</th>\r\n            <th>Risk Narrative</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {isLoaded ? (\r\n            scoreboards.map(scoreboard => {\r\n              return (\r\n                <tr key={scoreboard.id}>\r\n                  <td>{scoreboard.actionNarrative}</td>\r\n                  <td>{scoreboard.objectiveNarrative}</td>\r\n                  <td>{scoreboard.riskNarrative}</td>\r\n                </tr>\r\n              );\r\n            })\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"3\">Loading</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\nexport default ScoreBoard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { backendUrl } from '../../store/utility';\r\nimport classes from './../Projects/Projects.module.css';\r\nconst BusinessCase = props => {\r\n  const [id, setId] = useState('');\r\n  const [businessCases, setBusinessCase] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let infoId = props.match.params.id;\r\n    setId(infoId);\r\n    const url = `${backendUrl()}/businessCase/getBusinessCase/` + infoId;\r\n    const method = 'GET';\r\n    const header = { 'Content-Type': 'application/json' };\r\n\r\n    fetch(url, {\r\n      method: method,\r\n      headers: header\r\n    })\r\n      .then(res => {\r\n        if (res.status === 422) {\r\n          throw new Error('Error');\r\n        } else if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Error');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        setBusinessCase(resData.data);\r\n        setIsLoaded(true);\r\n      })\r\n      .catch(error => {\r\n        console.log('error occur', error);\r\n      });\r\n  }, []);\r\n\r\n  console.log(businessCases);\r\n\r\n  return (\r\n    <div className={classes.Projects}>\r\n      <h1>All Business Case </h1>\r\n      <table className={classes.Table}>\r\n        <thead>\r\n          <tr>\r\n            <th>Benefit</th>\r\n            <th>Benefit Timescale</th>\r\n            <th>Business Option</th>\r\n            <th>Costomer Impact And Engagement</th>\r\n            <th>Diversity And Inclusion Considerations </th>\r\n            <th>Duration</th>\r\n            <th>Estimated Cost</th>\r\n            <th>Executive Summary</th>\r\n            <th>Investment Appraisal</th>\r\n            <th>Major Risks</th>\r\n            <th>Negative Impact</th>\r\n            <th>Reason</th>\r\n            <th>Sponsor</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {isLoaded ? (\r\n            businessCases.map(businessCase => {\r\n              return (\r\n                <tr key={businessCase.id}>\r\n                  <td>{businessCase.benefit}</td>\r\n                  <td>{businessCase.benefitTimescale}</td>\r\n                  <td>{businessCase.businessOption}</td>\r\n                  <td>{businessCase.customerImpactAndEngagement}</td>\r\n                  <td>{businessCase.diversityAndInclusionConsiderations}</td>\r\n                  <td>{businessCase.duration}</td>\r\n                  <td>{businessCase.estimatedCost}</td>\r\n                  <td>{businessCase.executiveSummary}</td>\r\n                  <td>{businessCase.investmentAppraisal}</td>\r\n                  <td>{businessCase.majorRisks}</td>\r\n                  <td>{businessCase.negativeImpact}</td>\r\n                  <td>{businessCase.reason}</td>\r\n                  <td>{businessCase.sponsor}</td>\r\n                </tr>\r\n              );\r\n            })\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"3\">Loading</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\nexport default BusinessCase;\r\n","//----------------------------------------------------------------------------------------------------------------------\r\n// Imports; for webservices, styling and database access\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Layout } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport { backendUrl } from '../../store/utility';\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n// Function component (no state/ lifecycle used) for Active Projects\r\n// Maps project data to table rows\r\nconst ProjectCard = props => (\r\n  <tr>\r\n    <td>{props.project.id}</td>\r\n    <td>{props.project.name}</td>\r\n    <td>{props.project.projectScore}</td>\r\n    <td>A new application to speed the process</td>\r\n    <td>04/02/2021</td>\r\n    <td>{props.project.managerName}</td>\r\n    <td>{props.project.transformationLead}</td>\r\n    <td>{props.project.projectSize}</td>\r\n    <td>{props.project.projectType}</td>\r\n    <td>\r\n      <Link to={'/projectinfo/' + props.project.id}>\r\n        <Button>View</Button>\r\n      </Link>\r\n    </td>\r\n  </tr>\r\n);\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n// Admin project dashboard for active projects\r\nexport default class project_dash_active_Component extends Component {\r\n  //--------------------------------------------------------------------------------------------------------------------\r\n  // Constructor; initialises the state\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Initialises state for active and pending project arrays\r\n    this.state = { activeProjects: [], pendingProjects: [] };\r\n  }\r\n\r\n  //--------------------------------------------------------------------------------------------------------------------\r\n  // On page load; retrieve the project data from database\r\n  componentDidMount() {\r\n    // Retrieves all active projects from the database\r\n    axios\r\n      .get(`${backendUrl()}/projects/getAllActiveProjects`)\r\n      .then(response => {\r\n        this.setState({ activeProjects: response.data.data });\r\n      })\r\n\r\n      // Log error if unsuccessful\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n\r\n    // Retrieves all pending projects from the database\r\n    axios\r\n      .get(`${backendUrl()}/projects/getAllPendingProjects`)\r\n      .then(response => {\r\n        this.setState({ pendingProjects: response.data.data });\r\n      })\r\n\r\n      // Log error if unsuccessful\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  //--------------------------------------------------------------------------------------------------------------------\r\n  // Maps projects to table; sorting by priority score\r\n  projectList() {\r\n    return this.state.activeProjects\r\n      .sort(function (a, b) {\r\n        return b.priorityScore - a.priorityScore;\r\n      })\r\n      .map(currentproject => {\r\n        return <ProjectCard project={currentproject} key={currentproject.id} />;\r\n      });\r\n  }\r\n\r\n  //------------------------------------------------------------------------------------------------------------------\r\n  // Render; Projects dashboard with filters\r\n  render() {\r\n    return (\r\n      <div className={'container'}>\r\n        {/*----------------------------------------------------------------------------------------------------------*/}\r\n        {/* Page title with drop down filter options */}\r\n        <h3>&nbsp; Project Dash &nbsp;</h3>\r\n        <form className=\"dropdown\">\r\n          <select className=\"btn btn-secondary dropdown-toggle\" type=\"button\" name=\"cars\" id=\"cars\">\r\n            <option value=\"volvo\">Add Filter</option>\r\n            <option value=\"saab\">Manager</option>\r\n            <option value=\"opel\">Size</option>\r\n            <option value=\"audi\">Date</option>\r\n          </select>\r\n        </form>\r\n\r\n        {/*----------------------------------------------------------------------------------------------------------*/}\r\n        {/* Search form */}\r\n        <div className=\"float-right\">\r\n          <div className=\"input-group\">\r\n            <div className=\"form-outline\">\r\n              <input type=\"search\" id=\"form1\" placeholder={'Search'} className=\"form-control\" />\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => this.setState({ action: true })}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <br></br>\r\n\r\n        {/*----------------------------------------------------------------------------------------------------------*/}\r\n        {/* Buttons to switch between project statuses */}\r\n        <Button type=\"primary\">Active Projects</Button>\r\n        <Link to={'/adminPendingDash'}>\r\n          <Button>Pending Projects &ensp;{this.state.pendingProjects.length}&ensp;</Button>\r\n        </Link>\r\n\r\n        {/*----------------------------------------------------------------------------------------------------------*/}\r\n        {/* Table for active projects, mapping the data from the database */}\r\n        <Layout>\r\n          <table className={'table'}>\r\n            {/*--------------------------------------------------------------------------------------------------------*/}\r\n            {/* Table headers */}\r\n            <thead className={'thead-light'}>\r\n              <tr>\r\n                <th>Project ID</th>\r\n                <th>Project name</th>\r\n                <th>Priority Score</th>\r\n                <th>Description</th>\r\n                <th>Date started</th>\r\n                <th>Manager</th>\r\n                <th>Transformation Lead</th>\r\n                <th>Size</th>\r\n                <th>Project Type</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {/*--------------------------------------------------------------------------------------------------------*/}\r\n            {/* Populates table rows from the state activeProjects array */}\r\n            <tbody>{this.projectList()}</tbody>\r\n          </table>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","//----------------------------------------------------------------------------------------------------------------------\r\n// Imports; for webservices, styling and database access\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Layout } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport { backendUrl } from '../../store/utility';\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n// Function component (no state/ lifecycle used) for pending Projects\r\n// Maps project data to table rows\r\nconst ProjectCardPending = props => (\r\n  <tr>\r\n    <td>{props.project.id}</td>\r\n    <td>{props.project.name}</td>\r\n    <td>{props.project.projectScore}</td>\r\n    <td>A new application to speed the process</td>\r\n    <td>{props.project.projectSize}</td>\r\n    <td>{props.project.projectType}</td>\r\n    <td>\r\n      <Link to={'/adminReviewProject/' + props.project.id}>\r\n        <Button>Review</Button>\r\n      </Link>\r\n    </td>\r\n  </tr>\r\n);\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n// Admin project dashboard for pending projects\r\nexport default class project_dash_pending_Component extends Component {\r\n  //------------------------------------------------------------------------------------------------------------------\r\n  // Constructor; initialises the state\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Initialises state for active and pending project arrays\r\n    this.state = { activeProjects: [], pendingProjects: [] };\r\n  }\r\n\r\n  //------------------------------------------------------------------------------------------------------------------\r\n  // On page load; retrieve the project data from database\r\n  componentDidMount() {\r\n    // Retrieves all projects from the database\r\n    axios\r\n      .get(`${backendUrl()}/projects/getAllPendingProjects`)\r\n      .then(response => {\r\n        this.setState({ pendingProjects: response.data.data });\r\n      })\r\n\r\n      // Log error if unsuccessful\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  //------------------------------------------------------------------------------------------------------------------\r\n  // Maps projects to table; sorting by priority score\r\n  projectList() {\r\n    var element;\r\n\r\n    return this.state.pendingProjects\r\n      .sort(function (a, b) {\r\n        return b.priorityScore - a.priorityScore;\r\n      })\r\n      .map(currentproject => {\r\n        return <ProjectCardPending project={currentproject} key={currentproject.id} />;\r\n      });\r\n  }\r\n\r\n  //------------------------------------------------------------------------------------------------------------------\r\n  // Render; Projects dashboard with filters\r\n  render() {\r\n    return (\r\n      <div className={'container'}>\r\n        {/*------------------------------------------------------------------------------------------------------*/}\r\n        {/* Page title with drop down filter options */}\r\n        <h3>&nbsp; Project Dash &nbsp;</h3>\r\n        <form className=\"dropdown\">\r\n          <select className=\"btn btn-secondary dropdown-toggle\" type=\"button\" name=\"cars\" id=\"cars\">\r\n            <option value=\"volvo\">Add Filter</option>\r\n            <option value=\"saab\">Manager</option>\r\n            <option value=\"opel\">Size</option>\r\n            <option value=\"audi\">Date</option>\r\n          </select>\r\n        </form>\r\n\r\n        {/*------------------------------------------------------------------------------------------------------*/}\r\n        {/* Search form */}\r\n        <div className=\"float-right\">\r\n          <div className=\"input-group\">\r\n            <div className=\"form-outline\">\r\n              <input type=\"search\" id=\"form1\" placeholder={'Search'} className=\"form-control\" />\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => this.setState({ action: true })}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <br></br>\r\n\r\n        {/*------------------------------------------------------------------------------------------------------*/}\r\n        {/* Buttons to switch between project statuses */}\r\n        <Link to={'/adminActiveDash'}>\r\n          <Button>Active Projects</Button>\r\n        </Link>\r\n        <Button type=\"primary\">\r\n          Pending Projects\r\n          <span className=\"rounded-circle bg-danger text-white\">\r\n            &ensp;{this.state.pendingProjects.length}&ensp;\r\n          </span>\r\n        </Button>\r\n\r\n        {/*------------------------------------------------------------------------------------------------------*/}\r\n        {/* Table for pending projects, mapping the data from the database */}\r\n        <Layout>\r\n          <table className={'table'}>\r\n            {/*----------------------------------------------------------------------------------------------------*/}\r\n            {/* Table headers */}\r\n            <thead className={'thead-light'}>\r\n              <tr>\r\n                <th>Project ID</th>\r\n                <th>Project name</th>\r\n                <th>Priority Score</th>\r\n                <th>Description</th>\r\n                <th>Size</th>\r\n                <th>Project Type</th>\r\n                <th>Review</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {/*----------------------------------------------------------------------------------------------------*/}\r\n            {/* Populates table from the state pendingProjects array */}\r\n            <tbody>{this.projectList()}</tbody>\r\n          </table>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","//----------------------------------------------------------------------------------------------------------------------\r\n// Imports; for webservices, styling and database access\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport { backendUrl } from '../../store/utility';\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n// Admin review pending project details\r\nexport default class project_review_Component extends Component {\r\n  //------------------------------------------------------------------------------------------------------------------\r\n  // Constructor; initialises the state\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Binds all methods in the class to the correct implementation\r\n    this.onChangeManager = this.onChangeManager.bind(this);\r\n    this.onChangeTransformationLead = this.onChangeTransformationLead.bind(this);\r\n    this.onChangeQuestions = this.onChangeQuestions.bind(this);\r\n    this.onSubmitAccept = this.onSubmitAccept.bind(this);\r\n    this.onSubmitReject = this.onSubmitReject.bind(this);\r\n\r\n    // Initialises state for project information and business information aswell as form fields\r\n    this.state = {\r\n      Projectinfo: [],\r\n      BusinessInfo: [],\r\n      manager: '',\r\n      transformationLead: '',\r\n      questions: ''\r\n    };\r\n  }\r\n\r\n  //------------------------------------------------------------------------------------------------------------------\r\n  // On page load; retrieve the project data from database\r\n  componentDidMount() {\r\n    // Retrieves all project information by project id form the database\r\n    axios\r\n      .get(`${backendUrl()}/projects/projectdetails/` + this.props.match.params.id)\r\n      .then(response => {\r\n        this.setState({ Projectinfo: response.data.data });\r\n      })\r\n\r\n      // Log error if unsuccessful\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n\r\n    // Retrieves all business case information by project id form the database\r\n    axios\r\n      .get(`${backendUrl()}/businessCase/getBusinessCase/` + this.props.match.params.id)\r\n      .then(response => {\r\n        this.setState({ BusinessInfo: response.data.data[0] });\r\n      })\r\n\r\n      // Log error if unsuccessful\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  //--------------------------------------------------------------------------------------------------------------------\r\n  // Update the manager from a form\r\n  onChangeManager(e) {\r\n    this.setState({\r\n      manager: e.target.value\r\n    });\r\n  }\r\n\r\n  //--------------------------------------------------------------------------------------------------------------------\r\n  // Update the transfomationlead from a form\r\n  onChangeTransformationLead(e) {\r\n    this.setState({\r\n      transformationLead: e.target.value\r\n    });\r\n  }\r\n\r\n  //--------------------------------------------------------------------------------------------------------------------\r\n  // Update the duration from a form\r\n  onChangeQuestions(e) {\r\n    this.setState({\r\n      questions: e.target.value\r\n    });\r\n  }\r\n\r\n  //--------------------------------------------------------------------------------------------------------------------\r\n  // Submit accept form\r\n  onSubmitAccept(e) {\r\n    e.preventDefault();\r\n\r\n    // Gets form data into variable\r\n    const projectUpdate = {\r\n      manager: this.state.manager,\r\n      transformationLead: this.state.transformationLead\r\n    };\r\n\r\n    // Submits the data\r\n    console.log('DBG: form data');\r\n    console.log(projectUpdate);\r\n\r\n    axios\r\n      .post(`${backendUrl()}/projects/accept/` + this.props.match.params.id, projectUpdate)\r\n      .then(res => console.log(res.data));\r\n\r\n    // return to dashboard\r\n    window.location = '/adminActiveDash';\r\n  }\r\n\r\n  //--------------------------------------------------------------------------------------------------------------------\r\n  // Submit reject form\r\n  onSubmitReject(e) {\r\n    e.preventDefault();\r\n\r\n    // Gets form data into variable\r\n    const projectUpdate = {\r\n      questions: this.state.questions\r\n    };\r\n\r\n    // Submits the data\r\n    console.log('DBG: form data');\r\n    console.log(projectUpdate);\r\n\r\n    axios\r\n      .post(`${backendUrl()}/projects/reject/` + this.props.match.params.id, projectUpdate)\r\n      .then(res => console.log(res.data));\r\n\r\n    // return to dashboard\r\n    window.location = '/adminPendingDash';\r\n  }\r\n\r\n  //------------------------------------------------------------------------------------------------------------------\r\n  // Render; Projects dashboard with filters\r\n  render() {\r\n    return (\r\n      <div className={'container'}>\r\n        {/*------------------------------------------------------------------------------------------------------*/}\r\n        {/* Page title */}\r\n        <h3>&nbsp; Project Dash &nbsp;</h3>\r\n\r\n        {/*------------------------------------------------------------------------------------------------------*/}\r\n        {/* Buttons to return to the admin project pending dashboard */}\r\n        <Link to={'/adminPendingDash'}>\r\n          <Button type=\"primary\" style={{ background: 'green' }}>\r\n            Back to table\r\n          </Button>\r\n        </Link>\r\n\r\n        {/*------------------------------------------------------------------------------------------------------*/}\r\n        {/* Display project and business case information */}\r\n        <div className={'container'}>\r\n          <br></br>\r\n          <p>Project Id: {this.state.Projectinfo.id}</p>\r\n          <p>Project Name: {this.state.Projectinfo.name}</p>\r\n          <p>Priority Score: {this.state.Projectinfo.projectScore}</p>\r\n          <p>Project Size: {this.state.Projectinfo.projectSize}</p>\r\n          <p>Project Type: {this.state.Projectinfo.projectType}</p>\r\n          <p>Comments: {this.state.Projectinfo.questions}</p>\r\n          <p>Benefit: {this.state.BusinessInfo.benefit}</p>\r\n          <p>Estimated Cost: {this.state.BusinessInfo.estimatedCost}</p>\r\n          <p>Sponsor: {this.state.BusinessInfo.sponsor}</p>\r\n          <p>Executive Summary: {this.state.BusinessInfo.executiveSummary}</p>\r\n          <p>Reason: {this.state.BusinessInfo.reason}</p>\r\n          <p>Business Option: {this.state.BusinessInfo.businessOption}</p>\r\n          <p>Duration: {this.state.BusinessInfo.duration}</p>\r\n          <p>Benefit Timescale: {this.state.BusinessInfo.benefitTimescale}</p>\r\n          <p>Negative Impact: {this.state.BusinessInfo.negativeImpact}</p>\r\n          <p>\r\n            Customer Impact And Engagement: {this.state.BusinessInfo.customerImpactAndEngagement}\r\n          </p>\r\n          <p>Major Risks: {this.state.BusinessInfo.majorRisks}</p>\r\n          <p>\r\n            Diversity And Inclusion Considerations:{' '}\r\n            {this.state.BusinessInfo.diversityAndInclusionConsiderations}\r\n          </p>\r\n          <p>Investment Appraisal: {this.state.BusinessInfo.investmentAppraisal}</p>\r\n        </div>\r\n\r\n        {/*------------------------------------------------------------------------------------------------------*/}\r\n        {/* Accept project form to move project to active and assign manager and transformation lead */}\r\n        <hr></hr>\r\n        <div className={'container'}>\r\n          <h4>Accept project</h4>\r\n          <form onSubmit={this.onSubmitAccept}>\r\n            <label>Assign project manager: </label>\r\n            <input\r\n              type={'text'}\r\n              required\r\n              className={'form-control'}\r\n              value={this.state.manager}\r\n              onChange={this.onChangeManager}\r\n            />\r\n            <label>&nbsp; Assign transition lead: &nbsp;</label>\r\n            <input\r\n              type={'text'}\r\n              required\r\n              className={'form-control'}\r\n              value={this.state.transformationLead}\r\n              onChange={this.onChangeTransformationLead}\r\n            />\r\n\r\n            <input type={'submit'} value={'Accept Project'} className={'btn btn-success'} />\r\n          </form>\r\n        </div>\r\n\r\n        {/*------------------------------------------------------------------------------------------------------*/}\r\n        {/* Reject project form to move project to reject and add notes */}\r\n        <hr></hr>\r\n        <div className={'container'}>\r\n          <h4>Reject project</h4>\r\n          <form onSubmit={this.onSubmitReject}>\r\n            <label>&nbsp; Reason for rejection: &nbsp;</label>\r\n            <input\r\n              type={'text-box'}\r\n              required\r\n              className={'form-control'}\r\n              value={this.state.questions}\r\n              onChange={this.onChangeQuestions}\r\n            />\r\n\r\n            <input type={'submit'} value={'Reject Project'} className={'btn btn-danger'} />\r\n          </form>\r\n        </div>\r\n        <br></br>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Hafod-logo.d379f4f0.png\";","import React from 'react';\r\nimport classes from './Logo.module.css';\r\nimport messageLogo from '../../Assets/Hafod-logo.png';\r\n\r\nconst Logo = props => {\r\n  return (\r\n    <div className={classes.Logo}>\r\n      <img src={messageLogo} alt=\"logo\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport classes from './NgnItem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst NavItem = props => {\r\n    return (\r\n        <li className={classes.NavigationItem}>\r\n            <NavLink to={props.link} exact activeClassName={classes.active}>\r\n                {props.children}\r\n            </NavLink>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default NavItem;","import React from 'react';\r\nimport classes from './NavItems.module.css';\r\nimport NavItem from './NavItem/NavItem';\r\nimport { connect } from 'react-redux';\r\n\r\nexport const NavItems = props => {\r\n  return (\r\n    <ul className={classes.NavigationItems}>\r\n      {props.isAuthorise && props.role === 'transformationTeam' ? (\r\n        <NavItem link=\"/adminActiveDash\">Project Dashboard</NavItem>\r\n      ) : null}\r\n      {props.isAuthorise && props.role === 'transformationTeam' ? (\r\n        <NavItem link=\"/users\">Users</NavItem>\r\n      ) : null}\r\n      {props.isAuthorise ? (\r\n        <NavItem link=\"/logout\">Logout</NavItem>\r\n      ) : (\r\n        <NavItem link=\"/auth\">Login</NavItem>\r\n      )}\r\n      <NavItem link=\"/create-project\">Add Project </NavItem>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthorise: state.auth.token !== null,\r\n    role: state.auth.role\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavItems);\r\n","import React from 'react';\r\nimport classes from './Toolbar.module.css'\r\nimport Logo from \"../../Logo/Logo\";\r\nimport NavItems from \"../NavItems/NavItems\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Toolbar = (props) => {\r\n    return (\r\n        <header className={classes.Toolbar}>\r\n            {/*<DrawerToggle clicked={props.drawerToggleClicked}/>*/}\r\n            <div className={classes.Logo}>\r\n                <Logo/>\r\n            </div>\r\n            <div className={classes.AppTitle}>\r\n              {!props.role ? 'Project Management' : props.role}\r\n            </div>\r\n            <nav className={classes.DesktopOnly}>\r\n                <NavItems/>\r\n            </nav>\r\n        </header>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    role: state.auth.role\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Toolbar);","import React from 'react';\r\nimport classes from './Layout.module.css'\r\nimport Toolbar from \"../../Components/Navigation/Toolbar/Toolbar\";\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <>\r\n            {/*sidebar here if needed*/}\r\n            <Toolbar/>\r\n            <main className={classes.Content}>\r\n                {props.children}\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Layout;","import React from 'react';\r\nimport classes from './ProjectSubmission.module.css';\r\nimport hafodLogo from '../../../Assets/Hafod-logo.png';\r\nimport Classes from '../CreateProject.module.css';\r\nimport { Button } from 'antd';\r\n\r\nconst ProjectSubmission = () => {\r\n  return (\r\n    <div className={classes.ProjectSubmission}>\r\n      <div className={classes.box}>\r\n        <div className={classes.image} />\r\n        <div className={classes.contentWrapper}>\r\n          <img\r\n            style={{ height: 'auto', width: '35%', margin: 'auto' }}\r\n            src={hafodLogo}\r\n            alt=\"Hafod Logo\"\r\n          />\r\n          <h1>Thank you!</h1>\r\n          <p>Your questionnaire has been received. </p>\r\n          <p>\r\n            Thank you for taking the time to fill in our questionnaire to submit a change or\r\n            Simplify idea.\r\n          </p>\r\n          <p>It's now under processing and will be reviewed as soon as possible.</p>\r\n          <p>\r\n            At Hafod we care about your ideas of change you want to bring to the business and we\r\n            will continue to work hard so that customer values are met.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSubmission;\r\n","import './App.css';\r\nimport { withRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport React, { useEffect } from 'react';\r\nimport Auth from './Containers/Auth/Auth';\r\nimport Logout from './Containers/Auth/Logout/Logout';\r\nimport * as actions from './store/actions';\r\nimport CreateProject from './Containers/CreateProject/CreateProject';\r\nimport Users from './Containers/Users/Users';\r\nimport AssignProjects from './Containers/AssignUsers/AssignUsers';\r\nimport Projects from './Containers/Projects/Projects';\r\nimport ProjectInfo from './Containers/ProjectInfo/ProjectInfo';\r\nimport ScoreBoard from './Containers/Scoreboard/Scoreboard';\r\nimport BusinessCase from './Containers/BusinessCase/BusinessCase';\r\nimport AdminActiveDash from './Containers/projectDash/project_dash.component';\r\nimport AdminPendingDash from './Containers/projectDash/project_dash_pending.component';\r\nimport AdminPendingReview from './Containers/projectDash/project_review.component';\r\nimport Layout from './hoc/Layout/Layout';\r\nimport ProjectSubmission from './Containers/CreateProject/ProjectSubmission/ProjectSubmission';\r\n\r\n\r\nconst App = props => {\r\n  const { onTryAutoSignUp } = props;\r\n  useEffect(() => {\r\n    onTryAutoSignUp();\r\n  }, [onTryAutoSignUp]);\r\n\r\n  let routes = (\r\n    <Switch>\r\n      <Route path=\"/auth\" component={Auth} />\r\n      <Route path=\"/create-project/success\" component={ProjectSubmission} />\r\n      <Route path=\"/create-project\" component={CreateProject} />\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  );\r\n\r\n  if (props.isAuthorise) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/logout\" component={Logout} />\r\n        <Route path=\"/create-project/success\" component={ProjectSubmission} />\r\n        <Route path=\"/create-project\" component={CreateProject} />\r\n        <Route path=\"/projects\" component={Projects} />\r\n        <Route path=\"/assign-projects\" component={AssignProjects} />\r\n        <Route path=\"/projectinfo/:id\" component={ProjectInfo} />\r\n        <Route path=\"/scoreboard/:id\" component={ScoreBoard} />\r\n        <Route path=\"/businessCase/:id\" component={BusinessCase} />\r\n        <Route path=\"/adminPendingDash\" component={AdminPendingDash} />\r\n        <Route path=\"/adminActiveDash\" component={AdminActiveDash} />\r\n        <Route path=\"/adminReviewProject/:id\" component={AdminPendingReview} />\r\n        <Route path=\"/users\" component={Users} />\r\n        <Redirect to=\"/projects\" />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Layout />\r\n      {routes}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthorise: state.auth.token !== null\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onTryAutoSignUp: () => dispatch(actions.authCheckState())\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: \"/\",\r\n    isAuthorise: false,\r\n    role: null\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, { error: null, loading: true });\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        token: action.token,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false,\r\n        isAuthorise: true,\r\n        role: action.role\r\n    });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, { error: action.error.message, loading: false, isAuthorise: false });\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, { token: null, userId: null, role:null });\r\n};\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return updateObject(state, { authRedirectPath: action.path });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START:\r\n            return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL:\r\n            return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH:\r\n            return setAuthRedirectPath(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport {updateObject} from \"../utility\";\r\n\r\nconst initialState = {\r\n  user: null,\r\n  users: [],\r\n  error: null\r\n};\r\n\r\nconst getUserStart = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: true\r\n  });\r\n};\r\n\r\nconst getUserSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    user: action.user,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst getUserFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error.message,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst getUsersStart = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: true\r\n  });\r\n};\r\n\r\nconst getUsersSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    users: action.users.users,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst getUsersFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error.message,\r\n    loading: false\r\n  });\r\n};\r\n\r\n\r\nconst addUserStart = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: true\r\n  });\r\n};\r\n\r\nconst addUserSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst addUserFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error.message,\r\n    loading: false\r\n  });\r\n};\r\n\r\n\r\nconst editUserStart = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: true\r\n  });\r\n};\r\n\r\nconst editUserSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst editUserFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error.message,\r\n    loading: false\r\n  });\r\n};\r\n\r\n\r\nconst deleteUserStart = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: true\r\n  });\r\n};\r\n\r\nconst deleteUserSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst deleteUserFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error.message,\r\n    loading: false\r\n  });\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.GET_USER_START:\r\n      return getUserStart(state, action);\r\n    case actionTypes.GET_USER_SUCCESS:\r\n      return getUserSuccess(state, action);\r\n    case actionTypes.GET_USER_FAIL:\r\n      return getUserFail(state, action);\r\n\r\n    case actionTypes.GET_USERS_START:\r\n      return getUsersStart(state, action);\r\n    case actionTypes.GET_USERS_SUCCESS:\r\n      return getUsersSuccess(state, action);\r\n    case actionTypes.GET_USERS_FAIL:\r\n      return getUsersFail(state, action);\r\n\r\n    case actionTypes.ADD_USER_START:\r\n      return addUserStart(state, action);\r\n    case actionTypes.ADD_USER_SUCCESS:\r\n      return addUserSuccess(state, action);\r\n    case actionTypes.ADD_USER_FAIL:\r\n      return addUserFail(state, action);\r\n\r\n    case actionTypes.EDIT_USER_START:\r\n      return editUserStart(state, action);\r\n    case actionTypes.EDIT_USER_SUCCESS:\r\n      return editUserSuccess(state, action);\r\n    case actionTypes.EDIT_USER_FAIL:\r\n      return editUserFail(state, action);\r\n\r\n    case actionTypes.DELETE_USER_START:\r\n      return deleteUserStart(state, action);\r\n    case actionTypes.DELETE_USER_SUCCESS:\r\n      return deleteUserSuccess(state, action);\r\n    case actionTypes.DELETE_USER_FAIL:\r\n      return deleteUserFail(state, action);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n  error: null,\r\n  loading: false,\r\n  users: []\r\n};\r\n\r\nconst projectUsersStart = (state, action) => {\r\n  return updateObject(state, { error: null, loading: true });\r\n};\r\n\r\nconst projectUsersSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: false,\r\n    users: action.users\r\n  });\r\n};\r\n\r\nconst setProjectUsersSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: false,\r\n    user: action.users\r\n  });\r\n};\r\n\r\nconst projectUsersFail = (state, action) => {\r\n  return updateObject(state, { error: action.error.message, loading: false });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_PROJECT_USER_START:\r\n      return projectUsersStart(state, action);\r\n    case actionTypes.REMOVE_PROJECT_USER_START:\r\n      return projectUsersStart(state, action);\r\n    case actionTypes.GET_PROJECT_USER_START:\r\n      return projectUsersStart(state, action);\r\n\r\n    case actionTypes.ADD_PROJECT_USER_SUCCESS:\r\n      return projectUsersSuccess(state, action);\r\n    case actionTypes.GET_PROJECT_USER_SUCCESS:\r\n      return projectUsersSuccess(state, action);\r\n    case actionTypes.REMOVE_PROJECT_USER_SUCCESS:\r\n      return projectUsersSuccess(state, action);\r\n\r\n    case actionTypes.ADD_PROJECT_USER_FAIL:\r\n      return projectUsersFail(state, action);\r\n    case actionTypes.REMOVE_PROJECT_USER_FAIL:\r\n      return projectUsersFail(state, action);\r\n    case actionTypes.GET_PROJECT_USER_FAIL:\r\n      return projectUsersFail(state, action);\r\n\r\n    case actionTypes.SET_PROJECT_USER:\r\n      return setProjectUsersSuccess(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst projectsReducerDefaultState = [];\r\n\r\nconst editProjectStart = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: true\r\n  });\r\n};\r\n\r\nconst editProjectSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst editProjectFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error.message,\r\n    loading: false\r\n  });\r\n};\r\n\r\nexport default (state = projectsReducerDefaultState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_PROJECT':\r\n      return [...state, action.project];\r\n\r\n    case actionTypes.EDIT_PROJECT_START:\r\n      return editProjectStart(state, action);\r\n    case actionTypes.EDIT_PROJECT_SUCCESS:\r\n      return editProjectSuccess(state, action);\r\n    case actionTypes.EDIT_PROJECT_FAIL:\r\n      return editProjectFail(state, action);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createStore, compose, applyMiddleware, combineReducers } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport authReducer from './store/reducers/auth';\r\nimport usersReducer from './store/reducers/users';\r\nimport assignUserReducer from './store/reducers/assignUser';\r\nimport editProjectReducer from './store/reducers/projects';\r\n\r\nconst composeEnhancers =\r\n  (process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null) ||\r\n  compose;\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  users: usersReducer,\r\n  assignUser: assignUserReducer,\r\n  project: editProjectReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>\r\n);\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Projects\":\"Projects_Projects__2pVKf\",\"ProjectInfo\":\"Projects_ProjectInfo__3IsJF\",\"Table\":\"Projects_Table__2ZtAz\",\"antBtn\":\"Projects_antBtn__28e_i\",\"anticon\":\"Projects_anticon__IaNIs\",\"antBtn-lg\":\"Projects_antBtn-lg__RO_OG\",\"antBtn-sm\":\"Projects_antBtn-sm__zBlc5\",\"antBtn-primary\":\"Projects_antBtn-primary__3n7AK\",\"antBtn-group\":\"Projects_antBtn-group__15FV5\",\"antBtn-ghost\":\"Projects_antBtn-ghost__2DJRi\",\"antBtn-dashed\":\"Projects_antBtn-dashed__33Vx1\",\"antBtn-danger\":\"Projects_antBtn-danger__29f0p\",\"antBtn-link\":\"Projects_antBtn-link__5Gleu\",\"antBtn-text\":\"Projects_antBtn-text__1gRpx\"};"],"sourceRoot":""}